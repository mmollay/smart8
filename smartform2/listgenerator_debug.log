[2024-12-05 11:53:17] Debug-Logging initialisiert
[2024-12-05 11:53:17] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-05 11:53:17] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-05 11:53:17] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-05 11:53:17] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-05 11:53:17] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-05 11:53:17] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-05 11:53:17] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-05 11:53:26] Debug-Logging initialisiert
[2024-12-05 11:53:26] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-05 11:53:26] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-05 11:53:26] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-05 11:53:26] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-05 11:53:26] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-05 11:53:26] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-05 11:53:26] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-05 11:53:28] Debug-Logging initialisiert
[2024-12-05 11:53:28] Database set
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-05 11:53:28] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => senders
            [contentId] => content_senders
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_senders
            [autoReloadInterval] => 0
        )

)

[2024-12-05 11:53:28] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

)

[2024-12-05 11:53:28] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-05 11:53:28] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-05 11:53:28] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
 ORDER BY full_name DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-05 11:53:28] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-05 11:54:20] Debug-Logging initialisiert
[2024-12-05 11:54:20] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-05 11:54:20] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-05 11:54:20] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-05 11:54:20] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-05 11:54:20] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-05 11:54:20] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-05 11:54:20] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 09:08:10] Debug-Logging initialisiert
[2024-12-06 09:08:10] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 09:08:10] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 09:08:10] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 09:08:10] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 09:08:10] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 09:08:10] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 09:08:10] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 09:08:12] Debug-Logging initialisiert
[2024-12-06 09:08:12] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 09:08:12] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 09:08:12] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 09:08:12] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 09:08:12] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 09:08:12] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 09:08:12] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 10:58:07] Debug-Logging initialisiert
[2024-12-06 10:58:07] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 10:58:07] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 10:58:07] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 10:58:07] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 10:58:07] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 10:58:07] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 10:58:07] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 10:58:13] Debug-Logging initialisiert
[2024-12-06 10:58:13] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 10:58:13] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 10:58:13] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 10:58:13] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 10:58:13] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 10:58:13] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 10:58:13] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 10:58:18] Debug-Logging initialisiert
[2024-12-06 10:58:18] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 10:58:18] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 10:58:18] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 10:58:18] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 10:58:18] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 10:58:18] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 10:58:18] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 10:58:22] Debug-Logging initialisiert
[2024-12-06 10:58:22] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 10:58:22] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 10:58:22] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 10:58:22] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 10:58:22] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 10:58:22] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 10:58:22] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 10:58:34] Debug-Logging initialisiert
[2024-12-06 10:58:34] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 10:58:34] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 10:58:34] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 10:58:34] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 10:58:34] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 10:58:34] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 10:58:34] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 10:58:53] Debug-Logging initialisiert
[2024-12-06 10:58:53] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 10:58:58] Debug-Logging initialisiert
[2024-12-06 10:58:58] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 10:58:58] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 10:58:58] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 10:58:58] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 10:58:58] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 10:58:58] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 10:58:58] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 10:59:26] Debug-Logging initialisiert
[2024-12-06 10:59:26] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 10:59:26] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 10:59:26] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 10:59:26] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 10:59:26] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 10:59:26] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 10:59:26] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 10:59:52] Debug-Logging initialisiert
[2024-12-06 10:59:52] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 10:59:52] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 10:59:52] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 10:59:52] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 10:59:52] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 10:59:52] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 10:59:52] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 11:00:07] Debug-Logging initialisiert
[2024-12-06 11:00:07] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 11:00:07] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 11:00:07] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 11:00:07] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 11:00:07] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 11:00:07] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 11:00:07] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 11:00:13] Debug-Logging initialisiert
[2024-12-06 11:00:13] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 11:00:13] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 11:00:13] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 11:00:13] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 11:00:13] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 11:00:13] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 11:00:13] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 11:37:27] Debug-Logging initialisiert
[2024-12-06 11:37:27] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 11:37:27] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 11:37:27] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 11:37:27] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 11:37:27] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 11:37:27] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 11:37:27] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 11:37:32] Debug-Logging initialisiert
[2024-12-06 11:37:32] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 11:37:32] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 11:37:32] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 11:37:32] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 11:37:32] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 11:37:32] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 11:37:32] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 11:37:38] Debug-Logging initialisiert
[2024-12-06 11:37:38] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 11:37:38] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 11:37:38] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 11:37:38] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 11:37:38] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 11:37:38] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 11:37:38] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 11:38:47] Debug-Logging initialisiert
[2024-12-06 11:38:47] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 11:38:47] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 11:38:47] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 11:38:47] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 11:38:47] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 11:38:47] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 11:38:47] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 14:07:03] Debug-Logging initialisiert
[2024-12-06 14:07:03] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:07:03] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:07:03] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 14:07:03] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:07:03] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 14:07:03] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:07:03] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 14:07:13] Debug-Logging initialisiert
[2024-12-06 14:07:13] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:07:13] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:07:13] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 14:07:13] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:07:13] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 14:07:13] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:07:13] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 14:49:03] Debug-Logging initialisiert
[2024-12-06 14:49:03] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:49:03] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:49:03] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 14:49:03] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:49:03] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 14:49:03] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:49:03] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 14:49:09] Debug-Logging initialisiert
[2024-12-06 14:49:09] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:49:09] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:49:09] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 14:49:09] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:49:09] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 14:49:09] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:49:09] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 14:49:57] Debug-Logging initialisiert
[2024-12-06 14:49:57] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:49:57] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:49:57] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 14:49:57] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:49:57] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 14:49:57] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:49:57] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 14:51:29] Debug-Logging initialisiert
[2024-12-06 14:51:29] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:51:29] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:51:29] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 14:51:29] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:51:29] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 14:51:29] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:51:29] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 14:51:50] Debug-Logging initialisiert
[2024-12-06 14:51:50] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:51:50] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:51:50] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 14:51:50] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:51:50] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 14:51:50] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:51:50] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 14:52:03] Debug-Logging initialisiert
[2024-12-06 14:52:03] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:52:03] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:52:03] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 14:52:03] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:52:03] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 14:52:03] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:52:03] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 14:52:24] Debug-Logging initialisiert
[2024-12-06 14:52:24] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:52:24] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:52:24] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 14:52:24] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:52:24] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 14:52:24] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:52:24] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 14:52:36] Debug-Logging initialisiert
[2024-12-06 14:52:36] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:52:36] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:52:36] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 14:52:36] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:52:36] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 14:52:36] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:52:36] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 14:52:55] Debug-Logging initialisiert
[2024-12-06 14:52:55] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:52:55] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:52:55] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 14:52:55] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:52:55] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 14:52:55] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:52:55] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 14:54:49] Debug-Logging initialisiert
[2024-12-06 14:54:49] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:54:49] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:54:49] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 14:54:49] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:54:49] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 14:54:49] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:54:49] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 14:56:09] Debug-Logging initialisiert
[2024-12-06 14:56:09] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 14:56:09] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 14:56:09] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 14:56:09] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 14:56:09] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 14:56:09] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 14:56:09] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 15:00:48] Debug-Logging initialisiert
[2024-12-06 15:00:48] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 15:00:48] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 15:00:48] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 15:00:48] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 15:00:48] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 15:00:48] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 15:00:48] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 15:01:35] Debug-Logging initialisiert
[2024-12-06 15:01:35] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 15:01:35] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 15:01:35] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 15:01:35] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 15:01:35] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 15:01:35] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 15:01:35] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 15:01:48] Debug-Logging initialisiert
[2024-12-06 15:01:48] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 15:01:48] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 15:01:48] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 15:01:48] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 15:01:48] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 15:01:48] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 15:01:48] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 15:02:00] Debug-Logging initialisiert
[2024-12-06 15:02:00] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 15:02:00] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 15:02:00] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 15:02:00] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 15:02:00] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 15:02:00] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 15:02:00] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 15:02:14] Debug-Logging initialisiert
[2024-12-06 15:02:14] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 15:02:14] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 15:02:14] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 15:02:14] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 15:02:14] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 15:02:14] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 15:02:14] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 15:02:22] Debug-Logging initialisiert
[2024-12-06 15:02:22] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 15:02:22] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 15:02:22] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 15:02:22] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 15:02:22] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 15:02:22] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 15:02:22] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 15:02:32] Debug-Logging initialisiert
[2024-12-06 15:02:32] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 15:02:32] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 15:02:32] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 15:02:32] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 15:02:32] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 15:02:32] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 15:02:32] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 16:19:39] Debug-Logging initialisiert
[2024-12-06 16:19:39] Database set
Daten: Array
(
    [query] => 
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 16:19:39] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => templates
            [contentId] => content_templates
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Templates gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_templates
            [autoReloadInterval] => 0
        )

)

[2024-12-06 16:19:39] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'

)

[2024-12-06 16:19:39] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'
) as subquery 
    [params] => Array
        (
        )

)

[2024-12-06 16:19:39] Total rows
Daten: Array
(
    [count] => 2
)

[2024-12-06 16:19:39] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'
  ORDER BY template_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 16:19:39] Data fetched
Daten: Array
(
    [totalRows] => 2
    [returnedRows] => 2
)

[2024-12-06 16:23:21] Debug-Logging initialisiert
[2024-12-06 16:23:21] Database set
Daten: Array
(
    [query] => 
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 16:23:21] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => templates
            [contentId] => content_templates
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Templates gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_templates
            [autoReloadInterval] => 0
        )

)

[2024-12-06 16:23:21] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'

)

[2024-12-06 16:23:21] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'
) as subquery 
    [params] => Array
        (
        )

)

[2024-12-06 16:23:21] Total rows
Daten: Array
(
    [count] => 2
)

[2024-12-06 16:23:21] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'
  ORDER BY template_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 16:23:21] Data fetched
Daten: Array
(
    [totalRows] => 2
    [returnedRows] => 2
)

[2024-12-06 16:23:55] Debug-Logging initialisiert
[2024-12-06 16:23:55] Database set
Daten: Array
(
    [query] => 
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 16:23:55] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => templates
            [contentId] => content_templates
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Templates gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_templates
            [autoReloadInterval] => 0
        )

)

[2024-12-06 16:23:55] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'

)

[2024-12-06 16:23:55] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'
) as subquery 
    [params] => Array
        (
        )

)

[2024-12-06 16:23:55] Total rows
Daten: Array
(
    [count] => 2
)

[2024-12-06 16:23:55] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'
  ORDER BY template_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 16:23:55] Data fetched
Daten: Array
(
    [totalRows] => 2
    [returnedRows] => 2
)

[2024-12-06 16:30:26] Debug-Logging initialisiert
[2024-12-06 16:30:26] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 16:30:26] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 16:30:26] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 16:30:26] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 16:30:26] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 16:30:26] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 16:30:26] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 16:38:57] Debug-Logging initialisiert
[2024-12-06 16:38:57] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 16:38:57] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 16:38:57] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 16:38:57] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 16:38:57] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 16:38:57] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 16:38:57] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 16:39:29] Debug-Logging initialisiert
[2024-12-06 16:39:29] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 16:39:29] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 16:39:29] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 16:39:29] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 16:39:29] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 16:39:29] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 16:39:29] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 16:40:16] Debug-Logging initialisiert
[2024-12-06 16:40:16] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 16:40:16] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 16:40:16] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 16:40:16] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 16:40:16] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 16:40:16] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 16:40:16] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 16:41:25] Debug-Logging initialisiert
[2024-12-06 16:41:25] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 16:41:25] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 16:41:25] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 16:41:25] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 16:41:25] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 16:41:25] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 16:41:25] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 17:22:35] Debug-Logging initialisiert
[2024-12-06 17:22:35] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 17:22:35] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 17:22:35] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 17:22:35] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 17:22:35] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 17:22:35] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 17:22:35] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 17:27:03] Debug-Logging initialisiert
[2024-12-06 17:27:03] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 17:27:03] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 17:27:03] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 17:27:03] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 17:27:03] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 17:27:03] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 17:27:03] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 17:33:44] Debug-Logging initialisiert
[2024-12-06 17:33:44] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 17:33:44] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 17:33:44] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 17:33:44] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 17:33:44] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 17:33:44] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 17:33:44] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 17:33:50] Debug-Logging initialisiert
[2024-12-06 17:33:50] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 17:33:50] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 17:33:50] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 17:33:50] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 17:33:50] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 17:33:50] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 17:33:50] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 17:37:33] Debug-Logging initialisiert
[2024-12-06 17:37:33] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 17:37:33] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 17:37:33] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 17:37:33] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 17:37:33] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 17:37:33] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 17:37:33] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 17:37:41] Debug-Logging initialisiert
[2024-12-06 17:37:41] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 17:37:41] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 17:37:41] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 17:37:41] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 17:37:41] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 17:37:41] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 17:37:41] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 17:37:44] Debug-Logging initialisiert
[2024-12-06 17:37:44] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 17:37:44] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 17:37:44] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 17:37:44] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 17:37:44] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 17:37:44] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 17:37:44] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 17:37:53] Debug-Logging initialisiert
[2024-12-06 17:37:53] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 17:37:53] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 17:37:53] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 17:37:53] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 17:37:53] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 17:37:53] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 17:37:53] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 17:41:02] Debug-Logging initialisiert
[2024-12-06 17:41:02] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 17:41:02] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 17:41:02] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 17:41:02] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 17:41:02] Total rows
Daten: Array
(
    [count] => 3
)

[2024-12-06 17:41:02] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 17:41:02] Data fetched
Daten: Array
(
    [totalRows] => 3
    [returnedRows] => 3
)

[2024-12-06 18:42:55] Debug-Logging initialisiert
[2024-12-06 18:42:55] Database set
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:42:55] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:42:55] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
 GROUP BY r.id
)

[2024-12-06 18:42:55] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:42:55] Total rows
Daten: Array
(
    [count] => 8
)

[2024-12-06 18:42:55] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        r.unsubscribed,
        r.unsubscribed_at,
        r.bounce_status,
        r.last_bounce_at,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels,
        CASE 
            WHEN r.unsubscribed = 1 THEN 
                CONCAT('<div class="ui red mini label" title="Abgemeldet am ', 
                      DATE_FORMAT(r.unsubscribed_at, '%d.%m.%Y %H:%i'), 
                      '"><i class="user times icon"></i>Abgemeldet</div>')
            WHEN r.bounce_status = 'hard' THEN 
                CONCAT('<div class="ui orange mini label" title="Hard Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation triangle icon"></i>Hard Bounce</div>')
            WHEN r.bounce_status = 'soft' THEN 
                CONCAT('<div class="ui yellow mini label" title="Soft Bounce am ',
                      DATE_FORMAT(r.last_bounce_at, '%d.%m.%Y %H:%i'),
                      '"><i class="exclamation circle icon"></i>Soft Bounce</div>')
            ELSE '<div class="ui green mini label"><i class="user check icon"></i>Aktiv</div>'
        END as status_label
    FROM recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_id
    LEFT JOIN groups g ON rg.group_id = g.id
    WHERE r.user_id = '1317'
  GROUP BY r.id ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:42:55] Data fetched
Daten: Array
(
    [totalRows] => 8
    [returnedRows] => 8
)

[2024-12-06 18:43:04] Debug-Logging initialisiert
[2024-12-06 18:43:04] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:43:04] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:43:04] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 18:43:04] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:43:04] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 18:43:04] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:43:04] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 18:43:11] Debug-Logging initialisiert
[2024-12-06 18:43:11] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:43:11] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:43:11] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 18:43:11] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:43:11] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 18:43:11] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:43:11] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 18:43:18] Debug-Logging initialisiert
[2024-12-06 18:43:18] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:43:18] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:43:18] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 18:43:18] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:43:18] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 18:43:18] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:43:18] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 18:43:22] Debug-Logging initialisiert
[2024-12-06 18:43:23] Database set
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:43:23] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => senders
            [contentId] => content_senders
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_senders
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:43:23] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

)

[2024-12-06 18:43:23] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:43:23] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 18:43:23] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
 ORDER BY full_name DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:43:23] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 18:43:34] Debug-Logging initialisiert
[2024-12-06 18:43:34] Database set
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:43:34] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => senders
            [contentId] => content_senders
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_senders
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:43:34] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

)

[2024-12-06 18:43:34] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:43:34] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 18:43:34] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
 ORDER BY full_name DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:43:34] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 18:43:38] Debug-Logging initialisiert
[2024-12-06 18:43:38] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:43:38] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:43:38] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 18:43:38] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:43:38] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 18:43:38] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:43:38] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 18:43:40] Debug-Logging initialisiert
[2024-12-06 18:43:40] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:43:40] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:43:40] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 18:43:40] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:43:40] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 18:43:40] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:43:40] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 18:43:42] Debug-Logging initialisiert
[2024-12-06 18:43:42] Database set
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:43:42] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => senders
            [contentId] => content_senders
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_senders
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:43:42] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

)

[2024-12-06 18:43:42] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:43:42] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 18:43:42] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
 ORDER BY full_name DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:43:42] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 18:44:10] Debug-Logging initialisiert
[2024-12-06 18:44:10] Database set
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:44:10] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => groups
            [contentId] => content_group
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_group
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:44:10] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
    GROUP BY 
        g.id

)

[2024-12-06 18:44:10] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:44:10] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 18:44:10] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        g.id as group_id, 
        CONCAT('<div class="ui ', g.color, ' compact empty mini circular label"></div> ', g.name) as group_name,
        COUNT(DISTINCT r.id) as total_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 0 THEN r.id END) as active_recipients,
        COUNT(DISTINCT CASE WHEN r.unsubscribed = 1 THEN r.id END) as unsubscribed_recipients,
        g.created_at
    FROM 
        groups g
        LEFT JOIN recipient_group rg ON g.id = rg.group_id
        LEFT JOIN recipients r ON rg.recipient_id = r.id
    WHERE 
        g.user_id = '1317'    /* Hier direkt den userId verwenden statt Prepared Statement */
     GROUP BY 
        g.id
 ORDER BY group_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:44:10] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 18:44:25] Debug-Logging initialisiert
[2024-12-06 18:44:25] Database set
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:44:25] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => senders
            [contentId] => content_senders
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_senders
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:44:25] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

)

[2024-12-06 18:44:25] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:44:25] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 18:44:25] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
 ORDER BY full_name DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:44:25] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 18:44:32] Debug-Logging initialisiert
[2024-12-06 18:44:32] Database set
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:44:32] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => senders
            [contentId] => content_senders
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_senders
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:44:32] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

)

[2024-12-06 18:44:32] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:44:32] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 18:44:32] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
 ORDER BY full_name DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:44:32] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 18:44:33] Debug-Logging initialisiert
[2024-12-06 18:44:33] Database set
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:44:33] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => senders
            [contentId] => content_senders
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_senders
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:44:33] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
    GROUP BY id

)

[2024-12-06 18:44:33] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 18:44:33] Total rows
Daten: Array
(
    [count] => 1
)

[2024-12-06 18:44:33] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        id, 
        CONCAT(
            IFNULL(CONCAT(title, ' '), ''),
            first_name, 
            ' ', 
            last_name
        ) AS full_name,
        company, 
        email,
        test_email,
        CASE 
            WHEN test_email IS NOT NULL THEN 
                CONCAT(
                    '<div class="ui mini basic label">',
                    '<i class="envelope icon"></i>',
                    test_email,
                    '</div>'
                )
            ELSE 
                '<div class="ui mini grey label">Nicht konfiguriert</div>'
        END as formatted_test_email,
        gender, 
        comment
    FROM senders

	WHERE user_id = '1317'
     GROUP BY id
 ORDER BY full_name DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:44:33] Data fetched
Daten: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-12-06 18:47:17] Debug-Logging initialisiert
[2024-12-06 18:47:17] Database set
Daten: Array
(
    [query] => 
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 18:47:17] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => templates
            [contentId] => content_templates
            [itemsPerPage] => 20
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Templates gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_templates
            [autoReloadInterval] => 0
        )

)

[2024-12-06 18:47:17] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'

)

[2024-12-06 18:47:17] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'
) as subquery 
    [params] => Array
        (
        )

)

[2024-12-06 18:47:17] Total rows
Daten: Array
(
    [count] => 2
)

[2024-12-06 18:47:17] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT 
        t.id as template_id,
        t.name as template_name,
        t.description,
        t.subject,
        LEFT(t.html_content, 150) as preview_content,
        t.created_at,
        t.updated_at,
        COALESCE(
            (SELECT COUNT(*) 
            FROM email_contents 
            WHERE template_id = t.id)
        , 0) as usage_count
    FROM 
        email_templates t
        WHERE 
        t.user_id = '1317'
  ORDER BY template_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 18:47:17] Data fetched
Daten: Array
(
    [totalRows] => 2
    [returnedRows] => 2
)

[2024-12-06 21:33:32] Debug-Logging initialisiert
[2024-12-06 21:33:32] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:33:32] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:33:32] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:33:32] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:33:33] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:33:33] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:33:33] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:34:04] Debug-Logging initialisiert
[2024-12-06 21:34:04] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:34:04] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:34:04] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:34:04] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:34:04] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:34:04] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:34:04] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:34:28] Debug-Logging initialisiert
[2024-12-06 21:34:28] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:34:28] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:34:28] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:34:28] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:34:28] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:34:28] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:34:28] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:34:29] Debug-Logging initialisiert
[2024-12-06 21:34:29] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:34:29] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:34:29] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:34:29] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:34:29] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:34:29] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:34:29] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:34:46] Debug-Logging initialisiert
[2024-12-06 21:34:46] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:34:46] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:34:46] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:34:46] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:34:46] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:34:46] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:34:46] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:34:49] Debug-Logging initialisiert
[2024-12-06 21:34:49] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:34:49] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:34:49] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:34:49] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:34:49] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:34:49] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:34:49] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:39:10] Debug-Logging initialisiert
[2024-12-06 21:39:10] Database set
Daten: Array
(
    [query] => 
   SELECT DISTINCT
       ec.id as content_id,
       ec.subject,
       ec.send_status,
       CONCAT(s.first_name, ' ', s.last_name) as sender_name,
       s.email as sender_email,
       MAX(ej.sent_at) as send_date,
       (
           SELECT COUNT(DISTINCT r.id)
           FROM recipients r
           JOIN recipient_group rg ON r.id = rg.recipient_id
           JOIN email_content_groups ecg ON rg.group_id = ecg.group_id
           WHERE ecg.email_content_id = ec.id
           AND r.unsubscribed = 0 
           AND r.bounce_status != 'hard'
       ) as potential_recipients,
       COUNT(DISTINCT ej.recipient_id) as total_recipients,
       SUM(CASE WHEN ej.status = 'send' THEN 1 ELSE 0 END) as sent_count,
       SUM(CASE WHEN ej.status = 'open' THEN 1 ELSE 0 END) as opened_count,
       SUM(CASE WHEN ej.status = 'click' THEN 1 ELSE 0 END) as clicked_count,
       SUM(CASE WHEN ej.status IN ('failed', 'bounce', 'blocked', 'spam') THEN 1 ELSE 0 END) as failed_count,
       SUM(CASE WHEN ej.status = 'unsub' THEN 1 ELSE 0 END) as unsub_count,
       GROUP_CONCAT(DISTINCT g.name ORDER BY g.name ASC SEPARATOR '||') as group_names,
       GROUP_CONCAT(DISTINCT g.color ORDER BY g.name ASC SEPARATOR '||') as group_colors,
       GROUP_CONCAT(DISTINCT g.id) as group_id,
       CASE 
           WHEN ec.send_status = 1 
           AND COUNT(DISTINCT ej.recipient_id) > 0 
           AND COUNT(DISTINCT ej.recipient_id) = 
               SUM(CASE 
                   WHEN ej.status IN ('send', 'failed', 'bounce', 'blocked', 'spam', 'unsub') 
                   THEN 1 
                   ELSE 0 
               END)
           THEN 1 
           ELSE 0 
       END as is_fully_sent
   FROM 
       email_contents ec
       LEFT JOIN senders s ON ec.sender_id = s.id
       LEFT JOIN email_jobs ej ON ec.id = ej.content_id
       LEFT JOIN email_content_groups ecg ON ec.id = ecg.email_content_id
       LEFT JOIN groups g ON ecg.group_id = g.id
   WHERE 
       ec.user_id = '1317'
   GROUP BY 
       ec.id, 
       ec.subject,
       ec.send_status,
       sender_name,
       sender_email

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 21:39:10] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => newsletters
            [contentId] => content_newsletters
            [itemsPerPage] => 10
            [sortColumn] => ec.id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => ec.id
            [sortDir] => DESC
            [search] => 
            [saveState] => false
            [contentId] => content_newsletters
            [autoReloadInterval] => 20000
        )

)

[2024-12-06 21:39:10] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
   SELECT DISTINCT
       ec.id as content_id,
       ec.subject,
       ec.send_status,
       CONCAT(s.first_name, ' ', s.last_name) as sender_name,
       s.email as sender_email,
       MAX(ej.sent_at) as send_date,
       (
           SELECT COUNT(DISTINCT r.id)
           FROM recipients r
           JOIN recipient_group rg ON r.id = rg.recipient_id
           JOIN email_content_groups ecg ON rg.group_id = ecg.group_id
           WHERE ecg.email_content_id = ec.id
           AND r.unsubscribed = 0 
           AND r.bounce_status != 'hard'
       ) as potential_recipients,
       COUNT(DISTINCT ej.recipient_id) as total_recipients,
       SUM(CASE WHEN ej.status = 'send' THEN 1 ELSE 0 END) as sent_count,
       SUM(CASE WHEN ej.status = 'open' THEN 1 ELSE 0 END) as opened_count,
       SUM(CASE WHEN ej.status = 'click' THEN 1 ELSE 0 END) as clicked_count,
       SUM(CASE WHEN ej.status IN ('failed', 'bounce', 'blocked', 'spam') THEN 1 ELSE 0 END) as failed_count,
       SUM(CASE WHEN ej.status = 'unsub' THEN 1 ELSE 0 END) as unsub_count,
       GROUP_CONCAT(DISTINCT g.name ORDER BY g.name ASC SEPARATOR '||') as group_names,
       GROUP_CONCAT(DISTINCT g.color ORDER BY g.name ASC SEPARATOR '||') as group_colors,
       GROUP_CONCAT(DISTINCT g.id) as group_id,
       CASE 
           WHEN ec.send_status = 1 
           AND COUNT(DISTINCT ej.recipient_id) > 0 
           AND COUNT(DISTINCT ej.recipient_id) = 
               SUM(CASE 
                   WHEN ej.status IN ('send', 'failed', 'bounce', 'blocked', 'spam', 'unsub') 
                   THEN 1 
                   ELSE 0 
               END)
           THEN 1 
           ELSE 0 
       END as is_fully_sent
   FROM 
       email_contents ec
       LEFT JOIN senders s ON ec.sender_id = s.id
       LEFT JOIN email_jobs ej ON ec.id = ej.content_id
       LEFT JOIN email_content_groups ecg ON ec.id = ecg.email_content_id
       LEFT JOIN groups g ON ecg.group_id = g.id
   WHERE 
       ec.user_id = '1317'
   GROUP BY 
       ec.id, 
       ec.subject,
       ec.send_status,
       sender_name,
       sender_email

)

[2024-12-06 21:39:10] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
   SELECT DISTINCT
       ec.id as content_id,
       ec.subject,
       ec.send_status,
       CONCAT(s.first_name, ' ', s.last_name) as sender_name,
       s.email as sender_email,
       MAX(ej.sent_at) as send_date,
       (
           SELECT COUNT(DISTINCT r.id)
           FROM recipients r
           JOIN recipient_group rg ON r.id = rg.recipient_id
           JOIN email_content_groups ecg ON rg.group_id = ecg.group_id
           WHERE ecg.email_content_id = ec.id
           AND r.unsubscribed = 0 
           AND r.bounce_status != 'hard'
       ) as potential_recipients,
       COUNT(DISTINCT ej.recipient_id) as total_recipients,
       SUM(CASE WHEN ej.status = 'send' THEN 1 ELSE 0 END) as sent_count,
       SUM(CASE WHEN ej.status = 'open' THEN 1 ELSE 0 END) as opened_count,
       SUM(CASE WHEN ej.status = 'click' THEN 1 ELSE 0 END) as clicked_count,
       SUM(CASE WHEN ej.status IN ('failed', 'bounce', 'blocked', 'spam') THEN 1 ELSE 0 END) as failed_count,
       SUM(CASE WHEN ej.status = 'unsub' THEN 1 ELSE 0 END) as unsub_count,
       GROUP_CONCAT(DISTINCT g.name ORDER BY g.name ASC SEPARATOR '||') as group_names,
       GROUP_CONCAT(DISTINCT g.color ORDER BY g.name ASC SEPARATOR '||') as group_colors,
       GROUP_CONCAT(DISTINCT g.id) as group_id,
       CASE 
           WHEN ec.send_status = 1 
           AND COUNT(DISTINCT ej.recipient_id) > 0 
           AND COUNT(DISTINCT ej.recipient_id) = 
               SUM(CASE 
                   WHEN ej.status IN ('send', 'failed', 'bounce', 'blocked', 'spam', 'unsub') 
                   THEN 1 
                   ELSE 0 
               END)
           THEN 1 
           ELSE 0 
       END as is_fully_sent
   FROM 
       email_contents ec
       LEFT JOIN senders s ON ec.sender_id = s.id
       LEFT JOIN email_jobs ej ON ec.id = ej.content_id
       LEFT JOIN email_content_groups ecg ON ec.id = ecg.email_content_id
       LEFT JOIN groups g ON ecg.group_id = g.id
   WHERE 
       ec.user_id = '1317'
    GROUP BY 
       ec.id, 
       ec.subject,
       ec.send_status,
       sender_name,
       sender_email
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:39:10] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:39:10] Final SQL Query
Daten: Array
(
    [query] => 
   SELECT DISTINCT
       ec.id as content_id,
       ec.subject,
       ec.send_status,
       CONCAT(s.first_name, ' ', s.last_name) as sender_name,
       s.email as sender_email,
       MAX(ej.sent_at) as send_date,
       (
           SELECT COUNT(DISTINCT r.id)
           FROM recipients r
           JOIN recipient_group rg ON r.id = rg.recipient_id
           JOIN email_content_groups ecg ON rg.group_id = ecg.group_id
           WHERE ecg.email_content_id = ec.id
           AND r.unsubscribed = 0 
           AND r.bounce_status != 'hard'
       ) as potential_recipients,
       COUNT(DISTINCT ej.recipient_id) as total_recipients,
       SUM(CASE WHEN ej.status = 'send' THEN 1 ELSE 0 END) as sent_count,
       SUM(CASE WHEN ej.status = 'open' THEN 1 ELSE 0 END) as opened_count,
       SUM(CASE WHEN ej.status = 'click' THEN 1 ELSE 0 END) as clicked_count,
       SUM(CASE WHEN ej.status IN ('failed', 'bounce', 'blocked', 'spam') THEN 1 ELSE 0 END) as failed_count,
       SUM(CASE WHEN ej.status = 'unsub' THEN 1 ELSE 0 END) as unsub_count,
       GROUP_CONCAT(DISTINCT g.name ORDER BY g.name ASC SEPARATOR '||') as group_names,
       GROUP_CONCAT(DISTINCT g.color ORDER BY g.name ASC SEPARATOR '||') as group_colors,
       GROUP_CONCAT(DISTINCT g.id) as group_id,
       CASE 
           WHEN ec.send_status = 1 
           AND COUNT(DISTINCT ej.recipient_id) > 0 
           AND COUNT(DISTINCT ej.recipient_id) = 
               SUM(CASE 
                   WHEN ej.status IN ('send', 'failed', 'bounce', 'blocked', 'spam', 'unsub') 
                   THEN 1 
                   ELSE 0 
               END)
           THEN 1 
           ELSE 0 
       END as is_fully_sent
   FROM 
       email_contents ec
       LEFT JOIN senders s ON ec.sender_id = s.id
       LEFT JOIN email_jobs ej ON ec.id = ej.content_id
       LEFT JOIN email_content_groups ecg ON ec.id = ecg.email_content_id
       LEFT JOIN groups g ON ecg.group_id = g.id
   WHERE 
       ec.user_id = '1317'
    GROUP BY 
       ec.id, 
       ec.subject,
       ec.send_status,
       sender_name,
       sender_email
 ORDER BY content_id DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:39:10] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:39:12] Debug-Logging initialisiert
[2024-12-06 21:39:12] Database set
Daten: Array
(
    [query] => 
   SELECT DISTINCT
       ec.id as content_id,
       ec.subject,
       ec.send_status,
       CONCAT(s.first_name, ' ', s.last_name) as sender_name,
       s.email as sender_email,
       MAX(ej.sent_at) as send_date,
       (
           SELECT COUNT(DISTINCT r.id)
           FROM recipients r
           JOIN recipient_group rg ON r.id = rg.recipient_id
           JOIN email_content_groups ecg ON rg.group_id = ecg.group_id
           WHERE ecg.email_content_id = ec.id
           AND r.unsubscribed = 0 
           AND r.bounce_status != 'hard'
       ) as potential_recipients,
       COUNT(DISTINCT ej.recipient_id) as total_recipients,
       SUM(CASE WHEN ej.status = 'send' THEN 1 ELSE 0 END) as sent_count,
       SUM(CASE WHEN ej.status = 'open' THEN 1 ELSE 0 END) as opened_count,
       SUM(CASE WHEN ej.status = 'click' THEN 1 ELSE 0 END) as clicked_count,
       SUM(CASE WHEN ej.status IN ('failed', 'bounce', 'blocked', 'spam') THEN 1 ELSE 0 END) as failed_count,
       SUM(CASE WHEN ej.status = 'unsub' THEN 1 ELSE 0 END) as unsub_count,
       GROUP_CONCAT(DISTINCT g.name ORDER BY g.name ASC SEPARATOR '||') as group_names,
       GROUP_CONCAT(DISTINCT g.color ORDER BY g.name ASC SEPARATOR '||') as group_colors,
       GROUP_CONCAT(DISTINCT g.id) as group_id,
       CASE 
           WHEN ec.send_status = 1 
           AND COUNT(DISTINCT ej.recipient_id) > 0 
           AND COUNT(DISTINCT ej.recipient_id) = 
               SUM(CASE 
                   WHEN ej.status IN ('send', 'failed', 'bounce', 'blocked', 'spam', 'unsub') 
                   THEN 1 
                   ELSE 0 
               END)
           THEN 1 
           ELSE 0 
       END as is_fully_sent
   FROM 
       email_contents ec
       LEFT JOIN senders s ON ec.sender_id = s.id
       LEFT JOIN email_jobs ej ON ec.id = ej.content_id
       LEFT JOIN email_content_groups ecg ON ec.id = ecg.email_content_id
       LEFT JOIN groups g ON ecg.group_id = g.id
   WHERE 
       ec.user_id = '1317'
   GROUP BY 
       ec.id, 
       ec.subject,
       ec.send_status,
       sender_name,
       sender_email

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-12-06 21:39:12] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => newsletters
            [contentId] => content_newsletters
            [itemsPerPage] => 10
            [sortColumn] => content_id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => content_id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_newsletters
            [autoReloadInterval] => 20000
        )

)

[2024-12-06 21:39:12] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
   SELECT DISTINCT
       ec.id as content_id,
       ec.subject,
       ec.send_status,
       CONCAT(s.first_name, ' ', s.last_name) as sender_name,
       s.email as sender_email,
       MAX(ej.sent_at) as send_date,
       (
           SELECT COUNT(DISTINCT r.id)
           FROM recipients r
           JOIN recipient_group rg ON r.id = rg.recipient_id
           JOIN email_content_groups ecg ON rg.group_id = ecg.group_id
           WHERE ecg.email_content_id = ec.id
           AND r.unsubscribed = 0 
           AND r.bounce_status != 'hard'
       ) as potential_recipients,
       COUNT(DISTINCT ej.recipient_id) as total_recipients,
       SUM(CASE WHEN ej.status = 'send' THEN 1 ELSE 0 END) as sent_count,
       SUM(CASE WHEN ej.status = 'open' THEN 1 ELSE 0 END) as opened_count,
       SUM(CASE WHEN ej.status = 'click' THEN 1 ELSE 0 END) as clicked_count,
       SUM(CASE WHEN ej.status IN ('failed', 'bounce', 'blocked', 'spam') THEN 1 ELSE 0 END) as failed_count,
       SUM(CASE WHEN ej.status = 'unsub' THEN 1 ELSE 0 END) as unsub_count,
       GROUP_CONCAT(DISTINCT g.name ORDER BY g.name ASC SEPARATOR '||') as group_names,
       GROUP_CONCAT(DISTINCT g.color ORDER BY g.name ASC SEPARATOR '||') as group_colors,
       GROUP_CONCAT(DISTINCT g.id) as group_id,
       CASE 
           WHEN ec.send_status = 1 
           AND COUNT(DISTINCT ej.recipient_id) > 0 
           AND COUNT(DISTINCT ej.recipient_id) = 
               SUM(CASE 
                   WHEN ej.status IN ('send', 'failed', 'bounce', 'blocked', 'spam', 'unsub') 
                   THEN 1 
                   ELSE 0 
               END)
           THEN 1 
           ELSE 0 
       END as is_fully_sent
   FROM 
       email_contents ec
       LEFT JOIN senders s ON ec.sender_id = s.id
       LEFT JOIN email_jobs ej ON ec.id = ej.content_id
       LEFT JOIN email_content_groups ecg ON ec.id = ecg.email_content_id
       LEFT JOIN groups g ON ecg.group_id = g.id
   WHERE 
       ec.user_id = '1317'
   GROUP BY 
       ec.id, 
       ec.subject,
       ec.send_status,
       sender_name,
       sender_email

)

[2024-12-06 21:39:12] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
   SELECT DISTINCT
       ec.id as content_id,
       ec.subject,
       ec.send_status,
       CONCAT(s.first_name, ' ', s.last_name) as sender_name,
       s.email as sender_email,
       MAX(ej.sent_at) as send_date,
       (
           SELECT COUNT(DISTINCT r.id)
           FROM recipients r
           JOIN recipient_group rg ON r.id = rg.recipient_id
           JOIN email_content_groups ecg ON rg.group_id = ecg.group_id
           WHERE ecg.email_content_id = ec.id
           AND r.unsubscribed = 0 
           AND r.bounce_status != 'hard'
       ) as potential_recipients,
       COUNT(DISTINCT ej.recipient_id) as total_recipients,
       SUM(CASE WHEN ej.status = 'send' THEN 1 ELSE 0 END) as sent_count,
       SUM(CASE WHEN ej.status = 'open' THEN 1 ELSE 0 END) as opened_count,
       SUM(CASE WHEN ej.status = 'click' THEN 1 ELSE 0 END) as clicked_count,
       SUM(CASE WHEN ej.status IN ('failed', 'bounce', 'blocked', 'spam') THEN 1 ELSE 0 END) as failed_count,
       SUM(CASE WHEN ej.status = 'unsub' THEN 1 ELSE 0 END) as unsub_count,
       GROUP_CONCAT(DISTINCT g.name ORDER BY g.name ASC SEPARATOR '||') as group_names,
       GROUP_CONCAT(DISTINCT g.color ORDER BY g.name ASC SEPARATOR '||') as group_colors,
       GROUP_CONCAT(DISTINCT g.id) as group_id,
       CASE 
           WHEN ec.send_status = 1 
           AND COUNT(DISTINCT ej.recipient_id) > 0 
           AND COUNT(DISTINCT ej.recipient_id) = 
               SUM(CASE 
                   WHEN ej.status IN ('send', 'failed', 'bounce', 'blocked', 'spam', 'unsub') 
                   THEN 1 
                   ELSE 0 
               END)
           THEN 1 
           ELSE 0 
       END as is_fully_sent
   FROM 
       email_contents ec
       LEFT JOIN senders s ON ec.sender_id = s.id
       LEFT JOIN email_jobs ej ON ec.id = ej.content_id
       LEFT JOIN email_content_groups ecg ON ec.id = ecg.email_content_id
       LEFT JOIN groups g ON ecg.group_id = g.id
   WHERE 
       ec.user_id = '1317'
    GROUP BY 
       ec.id, 
       ec.subject,
       ec.send_status,
       sender_name,
       sender_email
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:39:12] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:39:12] Final SQL Query
Daten: Array
(
    [query] => 
   SELECT DISTINCT
       ec.id as content_id,
       ec.subject,
       ec.send_status,
       CONCAT(s.first_name, ' ', s.last_name) as sender_name,
       s.email as sender_email,
       MAX(ej.sent_at) as send_date,
       (
           SELECT COUNT(DISTINCT r.id)
           FROM recipients r
           JOIN recipient_group rg ON r.id = rg.recipient_id
           JOIN email_content_groups ecg ON rg.group_id = ecg.group_id
           WHERE ecg.email_content_id = ec.id
           AND r.unsubscribed = 0 
           AND r.bounce_status != 'hard'
       ) as potential_recipients,
       COUNT(DISTINCT ej.recipient_id) as total_recipients,
       SUM(CASE WHEN ej.status = 'send' THEN 1 ELSE 0 END) as sent_count,
       SUM(CASE WHEN ej.status = 'open' THEN 1 ELSE 0 END) as opened_count,
       SUM(CASE WHEN ej.status = 'click' THEN 1 ELSE 0 END) as clicked_count,
       SUM(CASE WHEN ej.status IN ('failed', 'bounce', 'blocked', 'spam') THEN 1 ELSE 0 END) as failed_count,
       SUM(CASE WHEN ej.status = 'unsub' THEN 1 ELSE 0 END) as unsub_count,
       GROUP_CONCAT(DISTINCT g.name ORDER BY g.name ASC SEPARATOR '||') as group_names,
       GROUP_CONCAT(DISTINCT g.color ORDER BY g.name ASC SEPARATOR '||') as group_colors,
       GROUP_CONCAT(DISTINCT g.id) as group_id,
       CASE 
           WHEN ec.send_status = 1 
           AND COUNT(DISTINCT ej.recipient_id) > 0 
           AND COUNT(DISTINCT ej.recipient_id) = 
               SUM(CASE 
                   WHEN ej.status IN ('send', 'failed', 'bounce', 'blocked', 'spam', 'unsub') 
                   THEN 1 
                   ELSE 0 
               END)
           THEN 1 
           ELSE 0 
       END as is_fully_sent
   FROM 
       email_contents ec
       LEFT JOIN senders s ON ec.sender_id = s.id
       LEFT JOIN email_jobs ej ON ec.id = ej.content_id
       LEFT JOIN email_content_groups ecg ON ec.id = ecg.email_content_id
       LEFT JOIN groups g ON ecg.group_id = g.id
   WHERE 
       ec.user_id = '1317'
    GROUP BY 
       ec.id, 
       ec.subject,
       ec.send_status,
       sender_name,
       sender_email
 ORDER BY content_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:39:12] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:39:59] Debug-Logging initialisiert
[2024-12-06 21:39:59] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:39:59] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:39:59] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:39:59] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:39:59] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:39:59] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:39:59] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:40:06] Debug-Logging initialisiert
[2024-12-06 21:40:06] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:40:06] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:40:06] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:40:06] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:40:06] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:40:06] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:40:06] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:40:08] Debug-Logging initialisiert
[2024-12-06 21:40:08] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:40:08] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => first_name
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => first_name
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:40:08] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:40:08] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:40:08] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:40:08] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:40:08] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:40:08] Debug-Logging initialisiert
[2024-12-06 21:40:08] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:40:08] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:40:08] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:40:08] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:40:08] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:40:08] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:40:08] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:40:46] Debug-Logging initialisiert
[2024-12-06 21:40:46] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:40:46] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => u.id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => u.id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:40:46] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:40:46] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:40:46] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:40:46] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:40:46] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:40:51] Debug-Logging initialisiert
[2024-12-06 21:40:51] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:40:51] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:40:51] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:40:51] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:40:51] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:40:51] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:40:51] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:40:59] Debug-Logging initialisiert
[2024-12-06 21:40:59] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:40:59] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => DESC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:40:59] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:40:59] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:40:59] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:40:59] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:40:59] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:41:37] Debug-Logging initialisiert
[2024-12-06 21:41:37] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:41:37] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => DESC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:41:37] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:41:37] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:41:37] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:41:37] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:41:37] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:42:31] Debug-Logging initialisiert
[2024-12-06 21:42:31] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:42:31] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => DESC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:42:31] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:42:31] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:42:31] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:42:31] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:42:31] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-06 21:42:32] Debug-Logging initialisiert
[2024-12-06 21:42:32] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-06 21:42:32] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => DESC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-06 21:42:32] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-06 21:42:32] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-06 21:42:32] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-06 21:42:32] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-06 21:42:32] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-12-08 13:46:17] Debug-Logging initialisiert
[2024-12-08 13:46:17] Database set
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-12-08 13:46:17] Fetching data
Daten: Array
(
    [config] => Array
        (
            [debug] => 1
            [debugLogFile] => 
            [maxLogSize] => 10485760
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [allowHtml] => 
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => DESC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-12-08 13:46:17] Verwende Datenbankabfrage
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-12-08 13:46:17] Count query
Daten: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-12-08 13:46:17] Total rows
Daten: Array
(
    [count] => 5
)

[2024-12-08 13:46:17] Final SQL Query
Daten: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-12-08 13:46:17] Data fetched
Daten: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

