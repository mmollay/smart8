[2024-09-04 15:04:36] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  document = 'rn'
)

[2024-09-04 15:04:36] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:04:36] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:04:36] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  document = 'rn')GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:06:26] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  document = 'rn'
)

[2024-09-04 15:06:26] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:06:26] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:06:26] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  document = 'rn'
    WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  document = 'rn') GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:06:59] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  (document = 'rn')
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  (document = 'rn')
)

[2024-09-04 15:06:59] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:06:59] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  (document = 'rn')
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:06:59] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  (document = 'rn')
    WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  (document = 'rn')) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:07:14] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  (document = 'rn')
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  (document = 'rn')
)

[2024-09-04 15:07:14] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:07:14] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  (document = 'rn')
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:07:14] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  (document = 'rn')
    WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE  (document = 'rn')) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:07:23] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
)

[2024-09-04 15:07:23] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:07:23] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:07:23] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:07:25] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
)

[2024-09-04 15:07:25] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:07:25] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:07:25] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:07:36] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
)

[2024-09-04 15:07:36] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:07:36] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:07:36] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:07:40] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
)

[2024-09-04 15:07:40] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:07:40] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:07:40] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id)))GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:07:43] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
)

[2024-09-04 15:07:43] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:07:43] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:07:43] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id)))GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:07:47] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
)

[2024-09-04 15:07:47] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:07:47] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:07:47] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id)))GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:07:50] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereConditions] => Array
        (
            [0] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1
            [1] => date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2
            [2] => date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3
            [3] => date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3
            [4] => date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id
            [5] => log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        )

)

[2024-09-04 15:07:50] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:07:50] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:07:50] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:07:50] Total rows
Data: Array
(
    [count] => 2002
)

[2024-09-04 15:07:50] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:07:50] Data fetched
Data: Array
(
    [totalRows] => 2002
    [returnedRows] => 25
)

[2024-09-04 15:07:53] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [originalWhereConditions] => 
)

[2024-09-04 15:07:53] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:07:53] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 15:07:53] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:07:53] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 15:07:53] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:07:53] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 15:08:10] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [originalWhereCondition] => 
)

[2024-09-04 15:08:10] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:08:10] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 15:08:10] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:08:10] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 15:08:10] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:08:10] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 15:08:11] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
)

[2024-09-04 15:08:11] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:08:11] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:08:11] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:08:24] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
)

[2024-09-04 15:08:24] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:08:24] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:08:24] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:08:36] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
)

[2024-09-04 15:08:36] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:08:36] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:08:36] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:09:06] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
)

[2024-09-04 15:09:06] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:09:06] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:09:06] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:09:07] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [originalWhereCondition] => company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
)

[2024-09-04 15:09:07] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:09:07] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:09:07] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    WHERE (company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:09:38] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
)

[2024-09-04 15:09:38] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:09:38] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:09:38] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:09:38] Total rows
Data: Array
(
    [count] => 2002
)

[2024-09-04 15:09:38] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:09:38] Data fetched
Data: Array
(
    [totalRows] => 2002
    [returnedRows] => 25
)

[2024-09-04 15:10:18] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
)

[2024-09-04 15:10:18] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:10:18] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:10:18] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:10:18] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 15:10:18] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:10:19] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 15:10:30] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
)

[2024-09-04 15:10:30] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2022"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:10:30] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:10:30] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2022"
    [type] => complex
)

[2024-09-04 15:10:30] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    WHERE YEAR(date_create)= "2022" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:17:58] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
)

[2024-09-04 15:17:58] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:17:58] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:17:58] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:17:58] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 15:17:58] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:17:58] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 15:18:02] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
)

[2024-09-04 15:18:02] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2015"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:18:02] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:18:02] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2015"
    [type] => complex
)

[2024-09-04 15:18:02] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    WHERE YEAR(date_create)= "2015" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:22:29] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 15:22:29] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:22:29] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 15:22:29] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:22:29] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 15:22:29] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:22:29] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 15:22:32] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:22:32] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:22:32] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:22:32] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:22:32] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 15:22:32] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:22:32] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 15:22:36] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:22:36] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2015"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:22:36] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:22:36] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2015"
    [type] => complex
)

[2024-09-04 15:22:36] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2015" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:22:36] Total rows
Data: Array
(
    [count] => 148
)

[2024-09-04 15:22:36] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2015" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:22:36] Data fetched
Data: Array
(
    [totalRows] => 148
    [returnedRows] => 25
)

[2024-09-04 15:22:48] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:22:48] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => 
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:22:48] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:22:48] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:22:48] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 15:22:49] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:22:49] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 15:22:50] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:22:50] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => 
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:22:50] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:22:50] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:22:50] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND DATE_FORMAT(date_create, "%m") = "03" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:22:50] Total rows
Data: Array
(
    [count] => 158
)

[2024-09-04 15:22:50] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND DATE_FORMAT(date_create, "%m") = "03" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:22:50] Data fetched
Data: Array
(
    [totalRows] => 158
    [returnedRows] => 25
)

[2024-09-04 15:22:52] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:22:52] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2013"
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:22:52] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:22:52] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2013"
    [type] => complex
)

[2024-09-04 15:22:52] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:22:52] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:22:52] Total rows
Data: Array
(
    [count] => 24
)

[2024-09-04 15:22:52] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:22:52] Data fetched
Data: Array
(
    [totalRows] => 24
    [returnedRows] => 24
)

[2024-09-04 15:23:02] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 15:23:02] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:23:02] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 15:23:02] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:23:02] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 15:23:02] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:23:02] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 15:23:05] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 15:23:05] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:23:05] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 15:23:05] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:23:05] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 15:23:05] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:23:05] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 15:23:07] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 15:23:07] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [u.status] => Aktiv
                )

            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:23:07] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 15:23:07] Applied filter
Data: Array
(
    [key] => u.status
    [value] => Aktiv
    [type] => simple
)

[2024-09-04 15:23:07] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    WHERE u.status = ? GROUP BY
        u.id
) as subquery
    [params] => Array
        (
            [0] => Aktiv
        )

)

[2024-09-04 15:23:07] Total rows
Data: Array
(
    [count] => 4
)

[2024-09-04 15:23:07] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    WHERE u.status = ? GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
            [0] => Aktiv
        )

)

[2024-09-04 15:23:07] Data fetched
Data: Array
(
    [totalRows] => 4
    [returnedRows] => 4
)

[2024-09-04 15:24:05] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:05] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => P
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => P
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2013"
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:05] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:05] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2013"
    [type] => complex
)

[2024-09-04 15:24:05] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:24:05] Applied search condition
Data: Array
(
    [0] => bill_number LIKE ?
    [1] => title LIKE ?
    [2] => company_1 LIKE ?
    [3] => firstname LIKE ?
    [4] => secondname LIKE ?
    [5] => brutto LIKE ?
)

[2024-09-04 15:24:05] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
            [0] => %P%
            [1] => %P%
            [2] => %P%
            [3] => %P%
            [4] => %P%
            [5] => %P%
        )

)

[2024-09-04 15:24:05] Total rows
Data: Array
(
    [count] => 4
)

[2024-09-04 15:24:05] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
            [0] => %P%
            [1] => %P%
            [2] => %P%
            [3] => %P%
            [4] => %P%
            [5] => %P%
        )

)

[2024-09-04 15:24:05] Data fetched
Data: Array
(
    [totalRows] => 4
    [returnedRows] => 4
)

[2024-09-04 15:24:06] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:06] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => Pe
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => Pe
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2013"
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:06] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:06] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2013"
    [type] => complex
)

[2024-09-04 15:24:06] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:24:06] Applied search condition
Data: Array
(
    [0] => bill_number LIKE ?
    [1] => title LIKE ?
    [2] => company_1 LIKE ?
    [3] => firstname LIKE ?
    [4] => secondname LIKE ?
    [5] => brutto LIKE ?
)

[2024-09-04 15:24:06] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
            [0] => %Pe%
            [1] => %Pe%
            [2] => %Pe%
            [3] => %Pe%
            [4] => %Pe%
            [5] => %Pe%
        )

)

[2024-09-04 15:24:06] Total rows
Data: Array
(
    [count] => 1
)

[2024-09-04 15:24:06] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
            [0] => %Pe%
            [1] => %Pe%
            [2] => %Pe%
            [3] => %Pe%
            [4] => %Pe%
            [5] => %Pe%
        )

)

[2024-09-04 15:24:06] Data fetched
Data: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-09-04 15:24:06] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:06] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => Pet
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => Pet
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2013"
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:06] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:06] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2013"
    [type] => complex
)

[2024-09-04 15:24:06] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:24:06] Applied search condition
Data: Array
(
    [0] => bill_number LIKE ?
    [1] => title LIKE ?
    [2] => company_1 LIKE ?
    [3] => firstname LIKE ?
    [4] => secondname LIKE ?
    [5] => brutto LIKE ?
)

[2024-09-04 15:24:06] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
            [0] => %Pet%
            [1] => %Pet%
            [2] => %Pet%
            [3] => %Pet%
            [4] => %Pet%
            [5] => %Pet%
        )

)

[2024-09-04 15:24:06] Total rows
Data: Array
(
    [count] => 1
)

[2024-09-04 15:24:06] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
            [0] => %Pet%
            [1] => %Pet%
            [2] => %Pet%
            [3] => %Pet%
            [4] => %Pet%
            [5] => %Pet%
        )

)

[2024-09-04 15:24:06] Data fetched
Data: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-09-04 15:24:06] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:06] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => Peter
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => Peter
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2013"
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:06] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:06] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2013"
    [type] => complex
)

[2024-09-04 15:24:06] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:24:06] Applied search condition
Data: Array
(
    [0] => bill_number LIKE ?
    [1] => title LIKE ?
    [2] => company_1 LIKE ?
    [3] => firstname LIKE ?
    [4] => secondname LIKE ?
    [5] => brutto LIKE ?
)

[2024-09-04 15:24:06] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
            [0] => %Peter%
            [1] => %Peter%
            [2] => %Peter%
            [3] => %Peter%
            [4] => %Peter%
            [5] => %Peter%
        )

)

[2024-09-04 15:24:06] Total rows
Data: Array
(
    [count] => 1
)

[2024-09-04 15:24:06] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
            [0] => %Peter%
            [1] => %Peter%
            [2] => %Peter%
            [3] => %Peter%
            [4] => %Peter%
            [5] => %Peter%
        )

)

[2024-09-04 15:24:06] Data fetched
Data: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-09-04 15:24:07] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:07] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => Pete
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => Pete
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2013"
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:07] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:07] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2013"
    [type] => complex
)

[2024-09-04 15:24:07] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:24:07] Applied search condition
Data: Array
(
    [0] => bill_number LIKE ?
    [1] => title LIKE ?
    [2] => company_1 LIKE ?
    [3] => firstname LIKE ?
    [4] => secondname LIKE ?
    [5] => brutto LIKE ?
)

[2024-09-04 15:24:07] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
            [0] => %Pete%
            [1] => %Pete%
            [2] => %Pete%
            [3] => %Pete%
            [4] => %Pete%
            [5] => %Pete%
        )

)

[2024-09-04 15:24:07] Total rows
Data: Array
(
    [count] => 1
)

[2024-09-04 15:24:07] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
            [0] => %Pete%
            [1] => %Pete%
            [2] => %Pete%
            [3] => %Pete%
            [4] => %Pete%
            [5] => %Pete%
        )

)

[2024-09-04 15:24:07] Data fetched
Data: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-09-04 15:24:07] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:07] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => Pet
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => Pet
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2013"
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:07] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:07] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2013"
    [type] => complex
)

[2024-09-04 15:24:07] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:24:07] Applied search condition
Data: Array
(
    [0] => bill_number LIKE ?
    [1] => title LIKE ?
    [2] => company_1 LIKE ?
    [3] => firstname LIKE ?
    [4] => secondname LIKE ?
    [5] => brutto LIKE ?
)

[2024-09-04 15:24:07] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
            [0] => %Pet%
            [1] => %Pet%
            [2] => %Pet%
            [3] => %Pet%
            [4] => %Pet%
            [5] => %Pet%
        )

)

[2024-09-04 15:24:07] Total rows
Data: Array
(
    [count] => 1
)

[2024-09-04 15:24:07] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
            [0] => %Pet%
            [1] => %Pet%
            [2] => %Pet%
            [3] => %Pet%
            [4] => %Pet%
            [5] => %Pet%
        )

)

[2024-09-04 15:24:07] Data fetched
Data: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-09-04 15:24:07] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:07] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => Pe
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => Pe
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2013"
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:07] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:07] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2013"
    [type] => complex
)

[2024-09-04 15:24:07] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:24:07] Applied search condition
Data: Array
(
    [0] => bill_number LIKE ?
    [1] => title LIKE ?
    [2] => company_1 LIKE ?
    [3] => firstname LIKE ?
    [4] => secondname LIKE ?
    [5] => brutto LIKE ?
)

[2024-09-04 15:24:07] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
            [0] => %Pe%
            [1] => %Pe%
            [2] => %Pe%
            [3] => %Pe%
            [4] => %Pe%
            [5] => %Pe%
        )

)

[2024-09-04 15:24:07] Total rows
Data: Array
(
    [count] => 1
)

[2024-09-04 15:24:07] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
            [0] => %Pe%
            [1] => %Pe%
            [2] => %Pe%
            [3] => %Pe%
            [4] => %Pe%
            [5] => %Pe%
        )

)

[2024-09-04 15:24:07] Data fetched
Data: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-09-04 15:24:07] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:07] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => P
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => P
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2013"
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:07] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:07] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2013"
    [type] => complex
)

[2024-09-04 15:24:07] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:24:07] Applied search condition
Data: Array
(
    [0] => bill_number LIKE ?
    [1] => title LIKE ?
    [2] => company_1 LIKE ?
    [3] => firstname LIKE ?
    [4] => secondname LIKE ?
    [5] => brutto LIKE ?
)

[2024-09-04 15:24:07] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
            [0] => %P%
            [1] => %P%
            [2] => %P%
            [3] => %P%
            [4] => %P%
            [5] => %P%
        )

)

[2024-09-04 15:24:07] Total rows
Data: Array
(
    [count] => 4
)

[2024-09-04 15:24:07] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
            [0] => %P%
            [1] => %P%
            [2] => %P%
            [3] => %P%
            [4] => %P%
            [5] => %P%
        )

)

[2024-09-04 15:24:07] Data fetched
Data: Array
(
    [totalRows] => 4
    [returnedRows] => 4
)

[2024-09-04 15:24:07] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:07] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => P
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => P
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2013"
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:07] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:07] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2013"
    [type] => complex
)

[2024-09-04 15:24:07] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:24:07] Applied search condition
Data: Array
(
    [0] => bill_number LIKE ?
    [1] => title LIKE ?
    [2] => company_1 LIKE ?
    [3] => firstname LIKE ?
    [4] => secondname LIKE ?
    [5] => brutto LIKE ?
)

[2024-09-04 15:24:07] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
            [0] => %P%
            [1] => %P%
            [2] => %P%
            [3] => %P%
            [4] => %P%
            [5] => %P%
        )

)

[2024-09-04 15:24:07] Total rows
Data: Array
(
    [count] => 4
)

[2024-09-04 15:24:07] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" AND (bill_number LIKE ? OR title LIKE ? OR company_1 LIKE ? OR firstname LIKE ? OR secondname LIKE ? OR brutto LIKE ?) GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
            [0] => %P%
            [1] => %P%
            [2] => %P%
            [3] => %P%
            [4] => %P%
            [5] => %P%
        )

)

[2024-09-04 15:24:07] Data fetched
Data: Array
(
    [totalRows] => 4
    [returnedRows] => 4
)

[2024-09-04 15:24:08] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:08] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => YEAR(date_create)= "2013"
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:08] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:08] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2013"
    [type] => complex
)

[2024-09-04 15:24:08] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:24:08] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:08] Total rows
Data: Array
(
    [count] => 24
)

[2024-09-04 15:24:08] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2013" AND DATE_FORMAT(date_create, "%m") = "03" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:08] Data fetched
Data: Array
(
    [totalRows] => 24
    [returnedRows] => 24
)

[2024-09-04 15:24:11] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:11] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => 
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:11] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:11] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 15:24:11] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND DATE_FORMAT(date_create, "%m") = "03" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:12] Total rows
Data: Array
(
    [count] => 158
)

[2024-09-04 15:24:12] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND DATE_FORMAT(date_create, "%m") = "03" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:12] Data fetched
Data: Array
(
    [totalRows] => 158
    [returnedRows] => 25
)

[2024-09-04 15:24:13] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:13] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => 
                    [month_filter] => 
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:13] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:13] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:13] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 15:24:13] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:13] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 15:24:15] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:15] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => 
                    [month_filter] => 
                    [rechnungs_filter] => date_booking = "0000-00-00"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:15] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:15] Applied filter
Data: Array
(
    [key] => rechnungs_filter
    [value] => date_booking = "0000-00-00"
    [type] => complex
)

[2024-09-04 15:24:15] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND date_booking = "0000-00-00" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:15] Total rows
Data: Array
(
    [count] => 88
)

[2024-09-04 15:24:15] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND date_booking = "0000-00-00" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:15] Data fetched
Data: Array
(
    [totalRows] => 88
    [returnedRows] => 25
)

[2024-09-04 15:24:18] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:18] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => 
                    [month_filter] => 
                    [rechnungs_filter] => remind_level = 4 and date_remind < NOW() and date_booking = "0000-00-00" and date_storno = "0000-00-00"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:18] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:18] Applied filter
Data: Array
(
    [key] => rechnungs_filter
    [value] => remind_level = 4 and date_remind < NOW() and date_booking = "0000-00-00" and date_storno = "0000-00-00"
    [type] => complex
)

[2024-09-04 15:24:18] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND remind_level = 4 and date_remind < NOW() and date_booking = "0000-00-00" and date_storno = "0000-00-00" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:18] Total rows
Data: Array
(
    [count] => 0
)

[2024-09-04 15:24:18] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND remind_level = 4 and date_remind < NOW() and date_booking = "0000-00-00" and date_storno = "0000-00-00" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:18] Data fetched
Data: Array
(
    [totalRows] => 0
    [returnedRows] => 0
)

[2024-09-04 15:24:21] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:21] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => 
                    [month_filter] => 
                    [rechnungs_filter] => date_storno != "0000-00-00"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:21] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:21] Applied filter
Data: Array
(
    [key] => rechnungs_filter
    [value] => date_storno != "0000-00-00"
    [type] => complex
)

[2024-09-04 15:24:21] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND date_storno != "0000-00-00" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:21] Total rows
Data: Array
(
    [count] => 82
)

[2024-09-04 15:24:21] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND date_storno != "0000-00-00" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:21] Data fetched
Data: Array
(
    [totalRows] => 82
    [returnedRows] => 25
)

[2024-09-04 15:24:25] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:25] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [year_filter] => 
                    [month_filter] => 
                    [rechnungs_filter] => netto = "0.000"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:25] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:25] Applied filter
Data: Array
(
    [key] => rechnungs_filter
    [value] => netto = "0.000"
    [type] => complex
)

[2024-09-04 15:24:25] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND netto = "0.000" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:27] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:27] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:27] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:27] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:27] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 15:24:27] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:28] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 15:24:31] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:31] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [rechnungs_filter] => remind_level = 4 and date_remind < NOW() and date_booking = "0000-00-00" and date_storno = "0000-00-00"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:31] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:31] Applied filter
Data: Array
(
    [key] => rechnungs_filter
    [value] => remind_level = 4 and date_remind < NOW() and date_booking = "0000-00-00" and date_storno = "0000-00-00"
    [type] => complex
)

[2024-09-04 15:24:31] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND remind_level = 4 and date_remind < NOW() and date_booking = "0000-00-00" and date_storno = "0000-00-00" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:31] Total rows
Data: Array
(
    [count] => 0
)

[2024-09-04 15:24:31] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND remind_level = 4 and date_remind < NOW() and date_booking = "0000-00-00" and date_storno = "0000-00-00" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:31] Data fetched
Data: Array
(
    [totalRows] => 0
    [returnedRows] => 0
)

[2024-09-04 15:24:37] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:37] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [rechnungs_filter] => date_storno != "0000-00-00"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:37] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:37] Applied filter
Data: Array
(
    [key] => rechnungs_filter
    [value] => date_storno != "0000-00-00"
    [type] => complex
)

[2024-09-04 15:24:37] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND date_storno != "0000-00-00" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:37] Total rows
Data: Array
(
    [count] => 82
)

[2024-09-04 15:24:37] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND date_storno != "0000-00-00" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:37] Data fetched
Data: Array
(
    [totalRows] => 82
    [returnedRows] => 25
)

[2024-09-04 15:24:41] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:41] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [rechnungs_filter] => date_storno != "0000-00-00"
                    [year_filter] => YEAR(date_create)= "2017"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:41] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:41] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2017"
    [type] => complex
)

[2024-09-04 15:24:41] Applied filter
Data: Array
(
    [key] => rechnungs_filter
    [value] => date_storno != "0000-00-00"
    [type] => complex
)

[2024-09-04 15:24:41] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2017" AND date_storno != "0000-00-00" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:41] Total rows
Data: Array
(
    [count] => 10
)

[2024-09-04 15:24:41] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2017" AND date_storno != "0000-00-00" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:41] Data fetched
Data: Array
(
    [totalRows] => 10
    [returnedRows] => 10
)

[2024-09-04 15:24:47] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:47] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [rechnungs_filter] => 
                    [year_filter] => YEAR(date_create)= "2017"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:47] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:47] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2017"
    [type] => complex
)

[2024-09-04 15:24:47] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2017" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:47] Total rows
Data: Array
(
    [count] => 172
)

[2024-09-04 15:24:47] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2017" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:47] Data fetched
Data: Array
(
    [totalRows] => 172
    [returnedRows] => 25
)

[2024-09-04 15:24:52] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:52] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [rechnungs_filter] => date_storno != "0000-00-00"
                    [year_filter] => YEAR(date_create)= "2017"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:52] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:52] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2017"
    [type] => complex
)

[2024-09-04 15:24:52] Applied filter
Data: Array
(
    [key] => rechnungs_filter
    [value] => date_storno != "0000-00-00"
    [type] => complex
)

[2024-09-04 15:24:52] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2017" AND date_storno != "0000-00-00" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:52] Total rows
Data: Array
(
    [count] => 10
)

[2024-09-04 15:24:52] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2017" AND date_storno != "0000-00-00" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:52] Data fetched
Data: Array
(
    [totalRows] => 10
    [returnedRows] => 10
)

[2024-09-04 15:24:57] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 15:24:57] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => send_status
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => send_status
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [rechnungs_filter] => date_storno != "0000-00-00"
                    [year_filter] => YEAR(date_create)= "2017"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 15:24:57] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 15:24:57] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2017"
    [type] => complex
)

[2024-09-04 15:24:57] Applied filter
Data: Array
(
    [key] => rechnungs_filter
    [value] => date_storno != "0000-00-00"
    [type] => complex
)

[2024-09-04 15:24:57] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2017" AND date_storno != "0000-00-00" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 15:24:57] Total rows
Data: Array
(
    [count] => 10
)

[2024-09-04 15:24:57] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2017" AND date_storno != "0000-00-00" GROUP BY 
        bills.bill_id
 ORDER BY send_status ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 15:24:57] Data fetched
Data: Array
(
    [totalRows] => 10
    [returnedRows] => 10
)

[2024-09-04 16:09:48] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 16:09:48] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [u.status] => 
                )

            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:09:48] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 16:09:48] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:09:48] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 16:09:48] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:09:48] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 16:10:27] Database set
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 16:10:27] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:10:27] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

)

[2024-09-04 16:10:27] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:10:27] Total rows
Data: Array
(
    [count] => 4
)

[2024-09-04 16:10:27] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
 ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:10:27] Data fetched
Data: Array
(
    [totalRows] => 4
    [returnedRows] => 4
)

[2024-09-04 16:14:38] Database set
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 16:14:38] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:14:38] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

)

[2024-09-04 16:14:38] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:14:38] Total rows
Data: Array
(
    [count] => 4
)

[2024-09-04 16:14:38] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
 ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:14:38] Data fetched
Data: Array
(
    [totalRows] => 4
    [returnedRows] => 4
)

[2024-09-04 16:15:01] Database set
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 16:15:01] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:15:01] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

)

[2024-09-04 16:15:01] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:15:01] Total rows
Data: Array
(
    [count] => 4
)

[2024-09-04 16:15:01] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
 ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:15:01] Data fetched
Data: Array
(
    [totalRows] => 4
    [returnedRows] => 4
)

[2024-09-04 16:15:07] Database set
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 16:15:07] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:15:07] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

)

[2024-09-04 16:15:07] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:15:07] Total rows
Data: Array
(
    [count] => 4
)

[2024-09-04 16:15:07] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
 ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:15:07] Data fetched
Data: Array
(
    [totalRows] => 4
    [returnedRows] => 4
)

[2024-09-04 16:16:58] Database set
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 16:16:58] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:16:58] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

)

[2024-09-04 16:16:58] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:16:58] Total rows
Data: Array
(
    [count] => 4
)

[2024-09-04 16:16:58] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
 ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:16:58] Data fetched
Data: Array
(
    [totalRows] => 4
    [returnedRows] => 4
)

[2024-09-04 16:17:05] Database set
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 16:17:05] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:17:05] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

)

[2024-09-04 16:17:05] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:17:05] Total rows
Data: Array
(
    [count] => 4
)

[2024-09-04 16:17:05] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
 ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:17:05] Data fetched
Data: Array
(
    [totalRows] => 4
    [returnedRows] => 4
)

[2024-09-04 16:17:10] Database set
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 16:17:10] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:17:10] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

)

[2024-09-04 16:17:10] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:17:10] Total rows
Data: Array
(
    [count] => 4
)

[2024-09-04 16:17:10] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
 ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:17:10] Data fetched
Data: Array
(
    [totalRows] => 4
    [returnedRows] => 4
)

[2024-09-04 16:17:20] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:17:20] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:17:20] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 16:17:20] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:17:20] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 16:17:20] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:17:20] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 16:18:17] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:18:17] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:18:17] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:18:17] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:18:17] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:18:17] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:18:17] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:21:13] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:21:13] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:21:13] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:21:13] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:21:13] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:21:13] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:21:13] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:22:23] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:22:23] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:22:23] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:22:23] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:22:23] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:22:23] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:22:23] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:24:14] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:24:14] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:24:14] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:24:14] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:24:15] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:24:15] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:24:15] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:24:42] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:24:42] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:24:42] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:24:42] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:24:42] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:24:42] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:24:42] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:24:51] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:24:51] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:24:51] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:24:51] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:24:51] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:24:51] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:24:51] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:25:35] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:25:35] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:25:35] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:25:35] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:25:35] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:25:35] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:25:35] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:25:51] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:25:51] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:25:51] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:25:51] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:25:51] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:25:51] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:25:51] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:26:18] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:26:18] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:26:18] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:26:18] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:26:18] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:26:18] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:26:18] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:26:46] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:26:46] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:26:46] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:26:46] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:26:46] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:26:46] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:26:46] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:27:02] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:27:02] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:27:02] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:27:02] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:27:02] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:27:02] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:27:02] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:27:10] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:27:10] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:27:10] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:27:10] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:27:10] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:27:10] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:27:10] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:32:51] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:32:51] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:32:51] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:32:51] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:32:51] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:32:51] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:32:51] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:34:22] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:34:22] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:34:22] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:34:22] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:34:22] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:34:22] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:34:22] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:35:27] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:35:27] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:35:27] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:35:27] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:35:28] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:35:28] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:35:28] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:35:33] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:35:33] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:35:33] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:35:33] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:35:33] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:35:33] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:35:33] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 16:35:48] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 16:35:48] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 16:35:48] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 16:35:48] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 16:35:48] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 16:35:48] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 16:35:48] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:29:07] Database set
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 18:29:07] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => recipients
            [contentId] => content_recipients
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Empfänger gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_recipients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:29:07] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
    GROUP BY
        r.id

)

[2024-09-04 18:29:07] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:29:07] Total rows
Data: Array
(
    [count] => 4
)

[2024-09-04 18:29:07] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        r.id,
        r.first_name,
        r.last_name,
        r.company,
        r.email,
        r.gender,
        r.title,
        r.comment,
        GROUP_CONCAT(DISTINCT g.id) as group_ids,
        IFNULL(GROUP_CONCAT(
            DISTINCT CONCAT('<div class="ui mini basic compact label ', g.color, '">', g.name, '</div>')
            SEPARATOR ' '
        ), '<div class="ui mini compact label">Keine Gruppen</div>') as group_labels
    FROM
        recipients r
    LEFT JOIN recipient_group rg ON r.id = rg.recipient_group_id
    LEFT JOIN groups g ON rg.group_id = g.id
     GROUP BY
        r.id
 ORDER BY first_name ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:29:07] Data fetched
Data: Array
(
    [totalRows] => 4
    [returnedRows] => 4
)

[2024-09-04 18:30:15] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:30:15] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:30:15] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:30:15] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:30:15] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:30:15] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:30:15] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:30:19] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:30:19] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:30:19] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 18:30:19] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:30:19] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 18:30:19] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:30:19] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 18:30:26] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:30:26] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:30:26] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 18:30:26] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:30:26] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 18:30:26] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:30:26] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 18:30:28] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:30:28] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:30:28] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:30:28] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:30:28] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:30:28] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:30:28] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:30:28] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:30:28] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:30:28] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:30:29] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:30:29] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:30:29] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:30:29] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:30:37] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:30:37] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:30:37] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:30:37] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:30:38] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:30:38] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:30:38] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:32:56] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:32:56] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:32:56] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:32:56] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:32:56] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:32:56] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:32:56] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:33:04] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:33:04] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:33:04] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:33:04] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:33:04] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:33:04] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:33:04] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:33:11] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:33:11] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:33:11] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:33:11] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:33:11] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:33:11] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:33:11] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:34:24] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:34:24] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:34:24] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:34:24] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:34:24] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:34:24] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:34:24] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:35:01] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:35:01] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:35:01] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:35:01] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:35:01] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:35:01] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:35:01] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:36:07] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:36:07] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:36:07] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:36:07] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:36:07] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:36:07] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:36:07] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:36:25] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:36:25] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:36:25] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:36:25] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:36:25] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:36:25] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:36:25] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:36:35] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:36:35] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:36:35] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:36:35] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:36:35] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:36:35] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:36:35] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:37:03] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:37:03] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:37:03] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:37:03] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:37:03] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:37:03] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:37:03] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:40:10] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:40:10] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:40:10] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:40:10] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:40:10] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:40:10] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:40:10] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:40:33] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:40:33] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:40:33] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:40:33] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:40:33] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:40:33] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:40:33] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:41:11] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:41:11] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:41:11] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:41:11] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:41:11] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:41:11] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:41:11] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:42:01] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:42:01] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:42:01] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:42:01] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:42:01] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:42:01] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:42:01] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:46:01] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:01] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:01] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:01] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:01] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:46:01] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:01] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:46:10] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:10] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => tree_count > 0
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:10] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:10] Applied filter
Data: Array
(
    [key] => status
    [value] => tree_count > 0
    [type] => complex
)

[2024-09-04 18:46:10] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND tree_count > 0 GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:17] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:17] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:17] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:17] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:17] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:46:17] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:17] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:46:20] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:20] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => client.post = 1
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:20] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:20] Applied filter
Data: Array
(
    [key] => status
    [value] => client.post = 1
    [type] => complex
)

[2024-09-04 18:46:20] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.post = 1 GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:20] Total rows
Data: Array
(
    [count] => 8
)

[2024-09-04 18:46:20] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.post = 1 GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:20] Data fetched
Data: Array
(
    [totalRows] => 8
    [returnedRows] => 8
)

[2024-09-04 18:46:23] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:23] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => amound_open > 0
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:23] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:23] Applied filter
Data: Array
(
    [key] => status
    [value] => amound_open > 0
    [type] => complex
)

[2024-09-04 18:46:23] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND amound_open > 0 GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:25] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:25] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => amound_open > 0
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:25] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:25] Applied filter
Data: Array
(
    [key] => status
    [value] => amound_open > 0
    [type] => complex
)

[2024-09-04 18:46:25] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND amound_open > 0 GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:27] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:27] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:27] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:27] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:27] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:46:27] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:27] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:46:31] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:31] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => client.newsletter = 1
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:31] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:31] Applied filter
Data: Array
(
    [key] => status
    [value] => client.newsletter = 1
    [type] => complex
)

[2024-09-04 18:46:31] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.newsletter = 1 GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:31] Total rows
Data: Array
(
    [count] => 1
)

[2024-09-04 18:46:31] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.newsletter = 1 GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:31] Data fetched
Data: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-09-04 18:46:33] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:33] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => 
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:33] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:33] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:33] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:46:33] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:33] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:46:36] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:36] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => 
                    [country] => client.country = "at"
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:36] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:36] Applied filter
Data: Array
(
    [key] => country
    [value] => client.country = "at"
    [type] => complex
)

[2024-09-04 18:46:36] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.country = "at" GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:36] Total rows
Data: Array
(
    [count] => 476
)

[2024-09-04 18:46:36] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.country = "at" GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:36] Data fetched
Data: Array
(
    [totalRows] => 476
    [returnedRows] => 30
)

[2024-09-04 18:46:38] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:38] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => 
                    [country] => 
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:38] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:38] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:38] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:46:38] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:38] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:46:40] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:40] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => 
                    [country] => client.country = "ch"
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:40] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:40] Applied filter
Data: Array
(
    [key] => country
    [value] => client.country = "ch"
    [type] => complex
)

[2024-09-04 18:46:40] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.country = "ch" GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:40] Total rows
Data: Array
(
    [count] => 0
)

[2024-09-04 18:46:40] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.country = "ch" GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:40] Data fetched
Data: Array
(
    [totalRows] => 0
    [returnedRows] => 0
)

[2024-09-04 18:46:43] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:43] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => 
                    [country] => client.country NOT IN ("de", "at", "ch")
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:43] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:43] Applied filter
Data: Array
(
    [key] => country
    [value] => client.country NOT IN ("de", "at", "ch")
    [type] => complex
)

[2024-09-04 18:46:43] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.country NOT IN ("de", "at", "ch") GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:43] Total rows
Data: Array
(
    [count] => 236
)

[2024-09-04 18:46:43] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.country NOT IN ("de", "at", "ch") GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:43] Data fetched
Data: Array
(
    [totalRows] => 236
    [returnedRows] => 30
)

[2024-09-04 18:46:46] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:46] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => 
                    [country] => client.country = "de"
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:46] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:46] Applied filter
Data: Array
(
    [key] => country
    [value] => client.country = "de"
    [type] => complex
)

[2024-09-04 18:46:46] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.country = "de" GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:46] Total rows
Data: Array
(
    [count] => 12
)

[2024-09-04 18:46:46] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.country = "de" GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:46] Data fetched
Data: Array
(
    [totalRows] => 12
    [returnedRows] => 12
)

[2024-09-04 18:46:50] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:50] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => 
                    [country] => 
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:50] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:50] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:50] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:46:50] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:50] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:46:52] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:52] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => 
                    [country] => 
                    [join_date] => YEAR(client.join_date) = YEAR(CURDATE()) - 1
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:52] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:52] Applied filter
Data: Array
(
    [key] => join_date
    [value] => YEAR(client.join_date) = YEAR(CURDATE()) - 1
    [type] => complex
)

[2024-09-04 18:46:52] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND YEAR(client.join_date) = YEAR(CURDATE()) - 1 GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:52] Total rows
Data: Array
(
    [count] => 0
)

[2024-09-04 18:46:52] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND YEAR(client.join_date) = YEAR(CURDATE()) - 1 GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:52] Data fetched
Data: Array
(
    [totalRows] => 0
    [returnedRows] => 0
)

[2024-09-04 18:46:53] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:53] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => 
                    [country] => 
                    [join_date] => YEAR(client.join_date) = YEAR(CURDATE())
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:53] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:53] Applied filter
Data: Array
(
    [key] => join_date
    [value] => YEAR(client.join_date) = YEAR(CURDATE())
    [type] => complex
)

[2024-09-04 18:46:53] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND YEAR(client.join_date) = YEAR(CURDATE()) GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:53] Total rows
Data: Array
(
    [count] => 0
)

[2024-09-04 18:46:53] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND YEAR(client.join_date) = YEAR(CURDATE()) GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:53] Data fetched
Data: Array
(
    [totalRows] => 0
    [returnedRows] => 0
)

[2024-09-04 18:46:55] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:55] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => 
                    [country] => 
                    [join_date] => client.join_date <= DATE_SUB(CURDATE(), INTERVAL 2 YEAR)
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:55] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:55] Applied filter
Data: Array
(
    [key] => join_date
    [value] => client.join_date <= DATE_SUB(CURDATE(), INTERVAL 2 YEAR)
    [type] => complex
)

[2024-09-04 18:46:55] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.join_date <= DATE_SUB(CURDATE(), INTERVAL 2 YEAR) GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:55] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:46:55] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.join_date <= DATE_SUB(CURDATE(), INTERVAL 2 YEAR) GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:55] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:46:57] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:46:57] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => 
                    [country] => 
                    [join_date] => 
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:46:57] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:46:57] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:46:57] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:46:57] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:46:57] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:47:32] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:47:32] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:47:32] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:47:32] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:47:32] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:47:32] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:47:32] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:48:27] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:48:27] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:48:27] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:48:27] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:48:27] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:48:27] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:48:27] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:48:30] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:48:30] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => amound_open
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => amound_open
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:48:30] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:48:30] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:48:30] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:48:30] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY amound_open ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:48:30] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:48:31] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:48:31] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => amound_open
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => amound_open
            [sortDir] => DESC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:48:31] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:48:31] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:48:31] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:48:31] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY amound_open DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:48:31] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:48:32] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:48:32] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => amound_open
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => amound_open
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:48:32] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:48:32] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:48:32] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:48:32] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY amound_open ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:48:32] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:48:33] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:48:33] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => amound_open
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => amound_open
            [sortDir] => DESC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:48:33] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:48:33] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:48:33] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:48:33] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY amound_open DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:48:33] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:48:36] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:48:36] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => tree_count
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => tree_count
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:48:36] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:48:36] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:48:36] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:48:36] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY tree_count ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:48:36] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:48:36] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:48:36] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => tree_count
            [sortDirection] => DESC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => tree_count
            [sortDir] => DESC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:48:36] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:48:36] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:48:36] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:48:36] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY tree_count DESC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:48:36] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:48:37] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:48:37] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => tree_count
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => tree_count
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:48:37] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:48:37] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:48:37] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:48:37] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY tree_count ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:48:37] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:48:58] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:48:58] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:48:58] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:48:58] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:48:58] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:48:58] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:48:58] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:49:00] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:49:00] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:49:00] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:49:00] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:49:00] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:49:00] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:49:00] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:49:03] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:49:03] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => client.abo = 1
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:49:03] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:49:03] Applied filter
Data: Array
(
    [key] => status
    [value] => client.abo = 1
    [type] => complex
)

[2024-09-04 18:49:03] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.abo = 1 GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:49:03] Total rows
Data: Array
(
    [count] => 26
)

[2024-09-04 18:49:03] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.abo = 1 GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:49:03] Data fetched
Data: Array
(
    [totalRows] => 26
    [returnedRows] => 26
)

[2024-09-04 18:49:07] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:49:07] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => client.newsletter = 1
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:49:07] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:49:07] Applied filter
Data: Array
(
    [key] => status
    [value] => client.newsletter = 1
    [type] => complex
)

[2024-09-04 18:49:07] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.newsletter = 1 GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:49:07] Total rows
Data: Array
(
    [count] => 1
)

[2024-09-04 18:49:07] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.newsletter = 1 GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:49:07] Data fetched
Data: Array
(
    [totalRows] => 1
    [returnedRows] => 1
)

[2024-09-04 18:49:09] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:49:09] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => client.post = 1
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:49:09] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:49:09] Applied filter
Data: Array
(
    [key] => status
    [value] => client.post = 1
    [type] => complex
)

[2024-09-04 18:49:09] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.post = 1 GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:49:09] Total rows
Data: Array
(
    [count] => 8
)

[2024-09-04 18:49:09] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND client.post = 1 GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:49:09] Data fetched
Data: Array
(
    [totalRows] => 8
    [returnedRows] => 8
)

[2024-09-04 18:49:11] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:49:11] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [status] => amound_open > 0
                )

            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:49:11] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:49:11] Applied filter
Data: Array
(
    [key] => status
    [value] => amound_open > 0
    [type] => complex
)

[2024-09-04 18:49:11] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    AND amound_open > 0 GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:50:01] Database set
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:50:01] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => clients
            [contentId] => content_clients
            [itemsPerPage] => 30
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Kunden gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_clients
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:50:01] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
    GROUP BY 
        client.client_id

)

[2024-09-04 18:50:01] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:50:01] Total rows
Data: Array
(
    [count] => 724
)

[2024-09-04 18:50:01] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        client.client_id, 
        CONCAT(client.firstname, ' ', client.secondname) as full_name,
        client.join_date,
        CASE
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 != '' 
                THEN CONCAT(client.company_1, ' (', client.firstname, ' ', client.secondname, ')')
            WHEN (client.firstname != '' OR client.secondname != '') AND client.company_1 = '' 
                THEN CONCAT(client.firstname, ' ', client.secondname)
            ELSE client.company_1
        END as company_1,
        IFNULL(DATE_FORMAT(client.reg_date, '%Y-%m-%d'), '') as reg_date,
        CONCAT('<i class="', client.country, ' flag"></i>') as country,
        COUNT(DISTINCT tree.client_faktura_id) as tree_count,
        client.client_number,
        IF(client.abo, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as abo,
        IF(client.newsletter, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as newsletter,
        IF(client.post, '<i class="green icon checkmark"></i>', '<i class="icon disabled checkmark"></i>') as post,
        client.email,
        client.zip,
        client.city,
        client.birth,
        client.send_date,
        client.company_id,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto ELSE 0 END), 0), 2) as brutto,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.booking_total ELSE 0 END), 0), 2) as booking_total,
        ROUND(IFNULL(SUM(CASE WHEN bills.date_storno = '0000-00-00' AND bills.document = 'rn' THEN bills.brutto - bills.booking_total ELSE 0 END), 0), 2) as amound_open,
        IF(client.tel != '', CONCAT('<button class="client_info" title="Tel:', client.tel, '">Info</button>'), '') as info
    FROM 
        client 
        LEFT JOIN bills ON client.client_id = bills.client_id 
        LEFT JOIN membership ON client.client_id = membership.client_id 
        LEFT JOIN sections ON client.client_id = sections.client_id 
        LEFT JOIN tree ON tree.client_faktura_id = client.client_id
        WHERE 1=1
     GROUP BY 
        client.client_id
 ORDER BY client_id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:50:01] Data fetched
Data: Array
(
    [totalRows] => 724
    [returnedRows] => 30
)

[2024-09-04 18:50:14] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:50:14] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:50:14] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 18:50:14] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:50:15] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 18:50:15] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:50:15] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 18:50:17] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 18:50:17] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 18:50:17] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 18:50:17] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 18:50:17] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 18:50:17] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 18:50:17] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 19:10:39] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 19:10:39] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 19:10:39] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 19:10:39] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 19:10:39] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 19:10:39] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 19:10:39] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 19:23:21] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 19:23:21] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 19:23:21] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 19:23:21] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 19:23:21] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 19:23:21] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 19:23:21] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 20:01:51] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 20:01:51] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 20:01:51] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 20:01:51] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 20:01:51] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 20:01:51] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 20:01:51] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 20:46:42] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 20:46:42] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 20:46:42] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 20:46:42] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 20:46:42] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 20:46:42] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 20:46:42] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 20:47:23] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 20:47:23] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 20:47:23] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 20:47:23] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 20:47:23] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 20:47:23] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 20:47:23] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 20:47:30] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 20:47:30] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 20:47:30] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 20:47:30] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 20:47:30] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 20:47:30] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 20:47:30] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 20:48:39] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 20:48:39] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 20:48:39] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 20:48:39] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 20:48:39] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 20:48:39] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 20:48:39] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 20:48:44] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 20:48:44] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 20:48:44] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 20:48:44] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 20:48:44] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 20:48:44] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 20:48:45] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:02:20] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:02:20] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:02:20] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:02:20] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:02:20] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:02:20] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:02:20] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:02:40] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:02:40] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:02:40] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:02:40] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:02:40] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:02:40] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:02:40] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:02:59] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:02:59] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:02:59] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:02:59] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:02:59] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:02:59] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:02:59] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:03:12] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:03:12] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:03:12] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:03:12] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:03:12] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:03:12] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:03:12] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:19:25] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:19:25] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:19:25] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:19:25] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:19:25] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:19:25] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:19:25] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:23:40] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:23:40] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:23:40] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:23:40] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:23:40] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:23:40] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:23:40] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:26:34] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:26:34] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:26:34] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:26:34] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:26:34] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:26:34] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:26:34] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:26:52] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:26:52] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:26:52] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:26:52] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:26:52] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:26:52] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:26:52] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:27:08] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:27:08] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:27:08] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:27:08] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:27:08] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:27:08] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:27:08] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:27:19] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:27:19] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:27:19] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:27:19] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:27:19] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:27:19] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:27:19] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:27:36] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:27:36] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:27:36] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:27:36] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:27:36] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:27:36] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:27:36] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:29:47] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:29:47] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:29:47] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:29:47] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:29:47] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:29:47] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:29:47] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:29:56] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:29:56] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:29:56] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:29:56] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:29:56] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:29:56] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:29:56] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:31:18] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:31:18] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:31:18] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:31:18] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:31:18] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:31:18] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:31:18] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:43:58] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:43:58] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:43:58] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:43:58] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:43:58] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:43:58] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:43:58] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:47:30] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:47:30] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:47:30] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:47:30] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:47:30] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:47:30] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:47:30] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 21:47:39] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 21:47:39] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 21:47:39] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 21:47:39] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 21:47:39] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 21:47:39] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 21:47:39] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 22:03:12] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 22:03:12] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:03:12] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 22:03:12] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:03:12] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 22:03:12] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:03:12] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 22:03:17] Database set
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

    [useDatabase] => 1
    [hasWhereClause] => 
)

[2024-09-04 22:03:17] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => userList
            [contentId] => content1
            [itemsPerPage] => 10
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Daten gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled table
            [headerClasses] => ui inverted blue table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => blue
            [size] => small
            [width] => 1200px
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
            [compact] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content1
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:03:17] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
    GROUP BY
        u.id

)

[2024-09-04 22:03:17] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:03:17] Total rows
Data: Array
(
    [count] => 5
)

[2024-09-04 22:03:17] Final SQL Query
Data: Array
(
    [query] => 
    SELECT
        u.id, u.first_name, u.last_name, u.email, u.role, u.status, u.created_at, u.hire_date, u.salary,
        ud.city,
        d.name AS department_name,
        COUNT(DISTINCT up.project_id) AS project_count
    FROM
        users u
    LEFT JOIN
        user_details ud ON u.id = ud.user_id
    LEFT JOIN
        departments d ON u.department_id = d.id
    LEFT JOIN
        user_projects up ON u.id = up.user_id
     GROUP BY
        u.id
 ORDER BY id ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:03:17] Data fetched
Data: Array
(
    [totalRows] => 5
    [returnedRows] => 5
)

[2024-09-04 22:05:26] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:05:26] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:05:26] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:05:26] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:05:26] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:05:26] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:05:26] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:05:27] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:05:27] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:05:27] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:05:27] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:05:27] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:05:27] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:05:27] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:21:57] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:21:57] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:21:57] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:21:57] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:21:57] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:21:57] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:21:57] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:21:59] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:21:59] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:21:59] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:21:59] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:21:59] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:21:59] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:21:59] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:22:03] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:22:03] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:22:03] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:22:03] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:22:04] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:22:04] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:22:04] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:22:07] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:22:07] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:22:07] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:22:07] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:22:07] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:22:07] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:22:07] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:22:23] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:22:23] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:22:23] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:22:23] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:22:23] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:22:23] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:22:23] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:22:24] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:22:24] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:22:24] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:22:24] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:22:24] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:22:24] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:22:24] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:22:39] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:22:39] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:22:39] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:22:39] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:22:39] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:22:39] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:22:39] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:22:44] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:22:44] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:22:44] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:22:44] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:22:44] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:22:45] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:22:45] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:23:24] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:23:24] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:23:24] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:23:24] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:23:25] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:23:25] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:23:25] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:23:31] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:23:31] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:23:31] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:23:31] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:23:32] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:23:32] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:23:32] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:23:35] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:23:35] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:23:35] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:23:35] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:23:35] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:23:35] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:23:35] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:23:38] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:23:38] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:23:38] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:23:38] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:23:38] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:23:38] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:23:38] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:23:41] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:23:41] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:23:41] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:23:41] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:23:41] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:23:42] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:23:42] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:24:22] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:24:22] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:24:22] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:24:22] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:24:22] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:24:22] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:24:22] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:24:24] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:24:24] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:24:24] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:24:24] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:24:24] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:24:24] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:24:24] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:24:26] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:24:26] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:24:26] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:24:26] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:24:26] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:24:27] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:24:27] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:24:28] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:24:28] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:24:28] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:24:28] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:24:28] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:24:28] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:24:28] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:24:34] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:24:34] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:24:35] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:24:35] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:24:35] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:24:35] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:24:35] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:24:38] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:24:38] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:24:38] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:24:38] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:24:38] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:24:38] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:24:38] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:26:20] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:26:20] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:26:20] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:26:20] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:26:20] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:26:20] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:26:20] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:26:22] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:26:22] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:26:22] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:26:22] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:26:22] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:26:22] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:26:22] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:26:30] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:26:30] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:26:30] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:26:30] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:26:30] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:26:30] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:26:30] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:26:32] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:26:32] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:26:32] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:26:32] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:26:32] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:26:32] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:26:32] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:27:24] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:27:24] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:27:24] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:27:24] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:27:24] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:27:24] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:27:24] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:27:26] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:27:26] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:27:26] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:27:26] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:27:26] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:27:26] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:27:26] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:27:35] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:27:35] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [month_filter] => DATE_FORMAT(date_create, "%m") = "03"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:27:35] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:27:35] Applied filter
Data: Array
(
    [key] => month_filter
    [value] => DATE_FORMAT(date_create, "%m") = "03"
    [type] => complex
)

[2024-09-04 22:27:35] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND DATE_FORMAT(date_create, "%m") = "03" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:27:35] Total rows
Data: Array
(
    [count] => 158
)

[2024-09-04 22:27:35] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND DATE_FORMAT(date_create, "%m") = "03" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:27:35] Data fetched
Data: Array
(
    [totalRows] => 158
    [returnedRows] => 25
)

[2024-09-04 22:27:36] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:27:36] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [month_filter] => 
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:27:36] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:27:36] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:27:36] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:27:36] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:27:36] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:27:38] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:27:38] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [month_filter] => 
                    [year_filter] => YEAR(date_create)= "2015"
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:27:38] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:27:38] Applied filter
Data: Array
(
    [key] => year_filter
    [value] => YEAR(date_create)= "2015"
    [type] => complex
)

[2024-09-04 22:27:38] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2015" GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:27:38] Total rows
Data: Array
(
    [count] => 148
)

[2024-09-04 22:27:38] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    AND YEAR(date_create)= "2015" GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:27:38] Data fetched
Data: Array
(
    [totalRows] => 148
    [returnedRows] => 25
)

[2024-09-04 22:27:39] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:27:39] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [month_filter] => 
                    [year_filter] => 
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:27:39] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:27:39] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:27:39] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:27:39] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:27:39] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:27:43] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:27:43] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [filters] => Array
                (
                    [month_filter] => 
                    [year_filter] => 
                )

            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:27:43] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:27:43] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:27:43] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:27:43] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:27:43] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:28:28] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:28:28] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:28:28] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:28:28] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:28:28] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:28:28] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:28:28] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

[2024-09-04 22:29:01] Database set
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

    [useDatabase] => 1
    [hasWhereClause] => 1
)

[2024-09-04 22:29:01] Fetching data
Data: Array
(
    [config] => Array
        (
            [debug] => 1
            [listId] => bill_list
            [contentId] => content_bills
            [itemsPerPage] => 25
            [sortColumn] => id
            [sortDirection] => ASC
            [search] => 
            [page] => 1
            [showNoDataMessage] => 1
            [noDataMessage] => Keine Rechnungen gefunden.
            [showFooter] => 1
            [footerTemplate] => Gesamt: {totalRows} Einträge | Seite {currentPage} von {totalPages}
            [showPagination] => 1
            [tableClasses] => ui celled striped definition small compact very selectable table
            [headerClasses] => ui table
            [rowClasses] => 
            [cellClasses] => 
            [selectable] => 1
            [celled] => 1
            [color] => 
            [size] => small
            [width] => 100%
            [filterClass] => ui message
            [rememberFilters] => 1
            [striped] => 1
        )

    [GET] => Array
        (
            [page] => 1
            [sort] => id
            [sortDir] => ASC
            [search] => 
            [saveState] => false
            [contentId] => content_bills
            [autoReloadInterval] => 0
        )

)

[2024-09-04 22:29:01] Verwende Datenbankabfrage
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
    GROUP BY 
        bills.bill_id

)

[2024-09-04 22:29:01] Count query
Data: Array
(
    [query] => SELECT COUNT(*) as total FROM (
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
) as subquery
    [params] => Array
        (
        )

)

[2024-09-04 22:29:01] Total rows
Data: Array
(
    [count] => 1992
)

[2024-09-04 22:29:01] Final SQL Query
Data: Array
(
    [query] => 
    SELECT 
        bills.bill_id, 
        bill_number,
        client_number,
        DATE_FORMAT(date_create,'%Y-%m-%d') as date_create_show,
        date_booking,
        date_send,
        date_remind,
        remind_level,
        bills.netto,
        post,
        firstname,
        secondname,
        zip,
        city,
        ROUND(brutto,2) as brutto,
        date_storno, 
        (SELECT company_1 FROM company WHERE company_id = bills.company_id) as title_company, 
        IF(email = '', '', CONCAT('<i class="icon mail tooltip" title="', email, '"></i>')) as email,    
        IF(ROUND(booking_total) != ROUND(brutto), ROUND(brutto-booking_total,2), '0,00') as booking_total,        
        CASE 
            WHEN status = 'queued' THEN 'Versendet'
            WHEN status = 'sent' THEN '<h5 style="font-size:12px" class="ui grey header">Zugestellt</h5>'
            WHEN status = 'open' THEN '<h5 style="font-size:12px" class="ui green header">Geöffnet</h5>'
            WHEN status = 'click' THEN '<h5 style="font-size:12px" class="ui green header">Angegklickt</h5>'
            WHEN status = 'blocked' THEN '<h5 style="font-size:12px" class="ui black header">Geblockt</h5>'
            WHEN status = 'bounce' THEN '<h5 style="font-size:12px" class="ui red header">Unzustellbar</h5>'
            WHEN status = 'spam' THEN '<h5 style="font-size:12px" class="ui red header">Spam</h5>'
            WHEN status = 'unsub' THEN '<h5 style="font-size:12px" class="ui red header">Abgemeldet</h5>'
            ELSE status
        END as status,
        CASE
            WHEN date_storno != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:red">', date_storno, ' (Storno)</div>')
            WHEN date_booking != '0000-00-00' THEN CONCAT('<div class="info_text" style="color:green">', date_booking, ' (Verbucht)</div>')
            WHEN date_send = '0000-00-00' THEN CONCAT('<button class="ui button blue mini" onclick="send_pdf(', bills.bill_id, ')"><i class="icon send"></i> Versenden</button>')
            ELSE
                CASE
                    WHEN remind_level = 1 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 1 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 1 THEN CONCAT('<button class="ui button yellow mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 1</button>')
                    WHEN remind_level = 2 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 2 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 2 THEN CONCAT('<button class="ui button orange mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 2</button>')
                    WHEN remind_level = 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Mahnung 3 in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level = 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', true)" title="seit ', DATEDIFF(NOW(), date_remind), ' Tagen">Mahnung 3</button>')
                    WHEN remind_level > 3 AND date_remind > NOW() THEN CONCAT('<span class="info_text" style="color:grey">Inkasso in ', DATEDIFF(date_remind, NOW()), ' Tagen</span>')
                    WHEN remind_level > 3 THEN CONCAT('<button class="ui button red mini" onclick="send_pdf(', bills.bill_id, ', \'\', true)">Inkasso seit ', DATEDIFF(NOW(), date_remind), ' Tagen</button>')
                    ELSE ''
                END
        END as send_status,
        IF(tel, CONCAT('<button class="client_info" title="Tel:', tel, '">Info</button>'), '') as tel,
        CASE
            WHEN LENGTH(company_1) >= 40 THEN CONCAT(SUBSTRING(company_1, 1, 40), '<span class="km_info" title="', company_1, '">[...]</span>')
            WHEN company_1 = '' THEN CONCAT(firstname, ' ', secondname)
            ELSE company_1
        END as company_1
    FROM 
        bills 
        LEFT JOIN bill_details ON bills.bill_id = bill_details.bill_id 
        LEFT JOIN logfile ON (bills.bill_id = logfile.bill_id AND log_id = (SELECT MAX(log_id) FROM logfile WHERE bill_id = bills.bill_id))
        WHERE document = 'rn'
     GROUP BY 
        bills.bill_id
 ORDER BY title_company ASC LIMIT ? OFFSET ?
    [params] => Array
        (
        )

)

[2024-09-04 22:29:01] Data fetched
Data: Array
(
    [totalRows] => 1992
    [returnedRows] => 25
)

